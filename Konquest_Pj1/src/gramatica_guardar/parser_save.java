//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Mar 26 22:19:38 CST 2020
//----------------------------------------------------
package gramatica_guardar;

import classes.ErrorSintatico;
import static gramatica_guardar.parser_save.IMPRIMIR;
import static gramatica_guardar.parser_save.due√±o_;
import static gramatica_guardar.parser_save.naves_;
import static gramatica_guardar.parser_save.produccion_;
import static gramatica_guardar.parser_save.nombre_;
import static gramatica_guardar.parser_save.rojo_;
import static gramatica_guardar.parser_save.verde_;
import static gramatica_guardar.parser_save.azul_;
import static gramatica_guardar.parser_save.coordx_;
import static gramatica_guardar.parser_save.coordy_;
import static gramatica_guardar.parser_save.jugadores;
import static gramatica_guardar.parser_save.neutrales;
import static gramatica_guardar.parser_save.planetas;
import java.awt.Color;
import java.util.ArrayList;
import java_cup.runtime.Symbol;
import planetas.planeta_jugador;
import planetas_neutral.planeta_neutral;

/**
 * CUP v0.11a beta 20060608 generated parser.
 *
 * @version Thu Mar 26 22:19:38 CST 2020
 */
public class parser_save extends java_cup.runtime.lr_parser {

    /**
     * Default constructor.
     */
    public parser_save() {
        super();
    }

    /**
     * Constructor which sets the default scanner.
     */
    public parser_save(java_cup.runtime.Scanner s) {
        super(s);
    }

    /**
     * Constructor which sets the default scanner.
     */
    public parser_save(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {
        super(s, sf);
    }

    /**
     * Production table.
     */
    protected static final short _production_table[][]
            = unpackFromStrings(new String[]{
        "\000\322\000\002\002\004\000\002\002\005\000\002\002"
        + "\006\000\002\002\005\000\002\002\004\000\002\062\006"
        + "\000\002\062\007\000\002\062\006\000\002\062\005\000"
        + "\002\063\010\000\002\063\011\000\002\063\010\000\002"
        + "\063\007\000\002\063\006\000\002\064\004\000\002\064"
        + "\003\000\002\003\005\000\002\003\005\000\002\003\005"
        + "\000\002\003\005\000\002\003\005\000\002\003\005\000"
        + "\002\065\005\000\002\065\005\000\002\066\005\000\002"
        + "\066\005\000\002\067\005\000\002\067\005\000\002\004"
        + "\010\000\002\004\011\000\002\004\010\000\002\004\007"
        + "\000\002\004\006\000\002\005\010\000\002\005\011\000"
        + "\002\005\005\000\002\070\005\000\002\070\006\000\002"
        + "\071\005\000\002\071\002\000\002\071\006\000\002\071"
        + "\005\000\002\060\005\000\002\061\005\000\002\061\002"
        + "\000\002\061\006\000\002\006\003\000\002\006\003\000"
        + "\002\006\003\000\002\006\003\000\002\006\004\000\002"
        + "\007\005\000\002\010\005\000\002\010\005\000\002\010"
        + "\005\000\002\011\005\000\002\011\005\000\002\012\005"
        + "\000\002\012\005\000\002\013\005\000\002\013\005\000"
        + "\002\014\004\000\002\015\004\000\002\015\004\000\002"
        + "\015\004\000\002\016\004\000\002\016\004\000\002\017"
        + "\004\000\002\017\004\000\002\020\004\000\002\020\004"
        + "\000\002\021\004\000\002\022\004\000\002\022\004\000"
        + "\002\022\004\000\002\023\004\000\002\023\004\000\002"
        + "\024\004\000\002\024\004\000\002\025\004\000\002\025"
        + "\004\000\002\026\004\000\002\027\004\000\002\027\004"
        + "\000\002\027\004\000\002\030\004\000\002\030\004\000"
        + "\002\031\004\000\002\031\004\000\002\032\004\000\002"
        + "\032\004\000\002\033\007\000\002\033\010\000\002\033"
        + "\007\000\002\033\006\000\002\034\007\000\002\034\010"
        + "\000\002\034\007\000\002\034\006\000\002\034\005\000"
        + "\002\035\003\000\002\035\003\000\002\035\003\000\002"
        + "\040\007\000\002\040\010\000\002\040\007\000\002\040"
        + "\006\000\002\041\011\000\002\041\011\000\002\041\012"
        + "\000\002\041\011\000\002\041\010\000\002\041\007\000"
        + "\002\041\006\000\002\041\012\000\002\041\011\000\002"
        + "\041\010\000\002\041\007\000\002\041\006\000\002\042"
        + "\007\000\002\042\010\000\002\042\007\000\002\042\006"
        + "\000\002\042\005\000\002\043\011\000\002\043\011\000"
        + "\002\043\012\000\002\043\012\000\002\043\003\000\002"
        + "\044\007\000\002\044\010\000\002\044\007\000\002\044"
        + "\006\000\002\045\011\000\002\045\011\000\002\045\012"
        + "\000\002\045\011\000\002\045\010\000\002\045\007\000"
        + "\002\045\006\000\002\045\012\000\002\045\005\000\002"
        + "\046\007\000\002\047\011\000\002\047\011\000\002\047"
        + "\012\000\002\047\011\000\002\047\010\000\002\047\007"
        + "\000\002\047\006\000\002\047\012\000\002\047\011\000"
        + "\002\047\010\000\002\047\007\000\002\047\005\000\002"
        + "\050\007\000\002\050\010\000\002\050\007\000\002\050"
        + "\006\000\002\050\005\000\002\050\004\000\002\051\003"
        + "\000\002\051\003\000\002\051\003\000\002\052\007\000"
        + "\002\052\010\000\002\052\007\000\002\052\006\000\002"
        + "\053\013\000\002\053\013\000\002\053\014\000\002\053"
        + "\010\000\002\053\012\000\002\053\012\000\002\053\007"
        + "\000\002\053\010\000\002\054\007\000\002\054\010\000"
        + "\002\054\007\000\002\054\006\000\002\054\005\000\002"
        + "\055\013\000\002\055\013\000\002\055\014\000\002\055"
        + "\013\000\002\055\005\000\002\055\012\000\002\055\011"
        + "\000\002\055\005\000\002\055\004\000\002\056\011\000"
        + "\002\056\012\000\002\056\011\000\002\056\010\000\002"
        + "\056\007\000\002\056\005\000\002\057\011\000\002\057"
        + "\011\000\002\057\012\000\002\057\011\000\002\057\010"
        + "\000\002\057\012\000\002\057\011\000\002\057\010\000"
        + "\002\057\007\000\002\057\006\000\002\036\003\000\002"
        + "\036\003\000\002\037\003\000\002\037\003"});

    /**
     * Access to production table.
     */
    public short[][] production_table() {
        return _production_table;
    }

    /**
     * Parse-action table.
     */
    protected static final short[][] _action_table
            = unpackFromStrings(new String[]{
        "\000\u0361\000\006\003\004\011\006\001\002\000\016\003"
        + "\011\004\015\005\014\006\016\011\u0360\012\u035e\001\002"
        + "\000\004\002\u035d\001\002\000\012\003\011\004\015\005"
        + "\014\006\016\001\002\000\004\012\u035c\001\002\000\004"
        + "\015\u0356\001\002\000\024\003\u0348\004\u031d\005\u0330\006"
        + "\u0315\007\u032f\010\uffd5\011\u02fa\015\u0347\022\u0331\001\002"
        + "\000\004\015\u0327\001\002\000\004\015\u030b\001\002\000"
        + "\004\022\u02f6\001\002\000\004\022\062\001\002\000\004"
        + "\022\017\001\002\000\004\007\020\001\002\000\006\003"
        + "\021\031\023\001\002\000\014\022\041\031\042\032\027"
        + "\033\026\036\043\001\002\000\006\012\ufffc\015\ufffc\001"
        + "\002\000\004\022\024\001\002\000\006\032\027\033\026"
        + "\001\002\000\004\036\030\001\002\000\004\036\uff32\001"
        + "\002\000\004\036\uff33\001\002\000\006\032\032\034\031"
        + "\001\002\000\020\003\uff30\010\uff30\012\uff30\015\uff30\016"
        + "\uff30\026\uff30\042\uff30\001\002\000\020\003\uff31\010\uff31"
        + "\012\uff31\015\uff31\016\uff31\026\uff31\042\uff31\001\002\000"
        + "\006\010\034\015\036\001\002\000\006\012\ufff2\015\ufff2"
        + "\001\002\000\006\012\ufff8\015\ufff8\001\002\000\006\003"
        + "\021\031\023\001\002\000\006\012\ufff3\015\ufff3\001\002"
        + "\000\004\036\057\001\002\000\006\032\027\033\026\001"
        + "\002\000\004\022\046\001\002\000\006\032\032\034\031"
        + "\001\002\000\006\010\034\015\036\001\002\000\006\012"
        + "\ufff4\015\ufff4\001\002\000\006\032\027\033\026\001\002"
        + "\000\004\036\050\001\002\000\006\032\032\034\031\001"
        + "\002\000\006\010\034\015\036\001\002\000\006\012\ufff7"
        + "\015\ufff7\001\002\000\004\036\054\001\002\000\006\032"
        + "\032\034\031\001\002\000\006\010\034\015\036\001\002"
        + "\000\006\012\ufff6\015\ufff6\001\002\000\006\032\032\034"
        + "\031\001\002\000\006\010\034\015\036\001\002\000\006"
        + "\012\ufff5\015\ufff5\001\002\000\004\007\063\001\002\000"
        + "\004\011\065\001\002\000\010\003\u02ed\010\uffd5\015\u02ef"
        + "\001\002\000\014\003\076\016\072\026\100\031\102\042"
        + "\074\001\002\000\012\003\u02db\016\072\031\102\042\074"
        + "\001\002\000\012\003\u02c6\016\072\026\100\031\102\001"
        + "\002\000\004\012\u02c3\001\002\000\004\012\uffd1\001\002"
        + "\000\004\022\u02bf\001\002\000\012\003\u02a9\026\100\031"
        + "\102\042\074\001\002\000\004\022\u02a4\001\002\000\004"
        + "\012\uffd0\001\002\000\040\003\u0139\011\u013a\012\u0297\016"
        + "\126\017\130\020\133\021\137\022\u029a\023\u0136\024\u0135"
        + "\025\u0138\031\u0298\032\027\033\026\042\u0137\001\002\000"
        + "\004\012\uffd2\001\002\000\004\022\u025e\001\002\000\004"
        + "\015\110\001\002\000\004\022\104\001\002\000\004\012"
        + "\uffd3\001\002\000\006\032\027\033\026\001\002\000\004"
        + "\036\106\001\002\000\006\032\032\034\031\001\002\000"
        + "\016\003\uffa6\012\uffa6\015\uffa6\016\uffa6\026\uffa6\042\uffa6"
        + "\001\002\000\012\003\113\016\072\026\100\042\074\001"
        + "\002\000\004\015\u0256\001\002\000\004\015\u024a\001\002"
        + "\000\032\003\u0139\011\u013a\012\u0132\016\126\017\130\020"
        + "\133\021\137\022\u013c\023\u0136\024\u0135\025\u0138\042\u0137"
        + "\001\002\000\004\015\116\001\002\000\004\012\uffce\001"
        + "\002\000\010\003\120\016\072\026\100\001\002\000\004"
        + "\015\u0130\001\002\000\020\003\131\011\127\016\126\017"
        + "\130\020\133\021\137\022\136\001\002\000\004\015\123"
        + "\001\002\000\004\012\uffcb\001\002\000\006\003\120\016"
        + "\072\001\002\000\004\012\uffc5\001\002\000\004\012\uff9b"
        + "\001\002\000\004\022\u012c\001\002\000\012\003\131\017"
        + "\130\020\133\021\137\001\002\000\004\022\u0126\001\002"
        + "\000\016\015\271\017\272\020\270\021\266\022\273\035"
        + "\267\001\002\000\004\012\uff9c\001\002\000\004\022\225"
        + "\001\002\000\004\012\uff9d\001\002\000\004\012\224\001"
        + "\002\000\004\011\221\001\002\000\004\022\140\001\002"
        + "\000\004\035\141\001\002\000\004\015\142\001\002\000"
        + "\010\003\144\017\146\020\145\001\002\000\004\012\uff80"
        + "\001\002\000\014\015\165\017\167\020\164\022\166\035"
        + "\163\001\002\000\004\022\155\001\002\000\004\022\147"
        + "\001\002\000\004\035\150\001\002\000\004\015\151\001"
        + "\002\000\004\020\152\001\002\000\004\022\153\001\002"
        + "\000\004\035\154\001\002\000\004\012\uff7c\001\002\000"
        + "\004\035\156\001\002\000\004\015\157\001\002\000\004"
        + "\017\160\001\002\000\004\022\161\001\002\000\004\035"
        + "\162\001\002\000\004\012\uff7b\001\002\000\004\015\215"
        + "\001\002\000\004\022\207\001\002\000\006\017\204\035"
        + "\203\001\002\000\004\035\176\001\002\000\004\022\170"
        + "\001\002\000\004\035\171\001\002\000\006\012\uff76\015"
        + "\172\001\002\000\004\020\173\001\002\000\004\022\174"
        + "\001\002\000\004\035\175\001\002\000\004\012\uff75\001"
        + "\002\000\004\015\177\001\002\000\004\017\200\001\002"
        + "\000\004\022\201\001\002\000\004\035\202\001\002\000"
        + "\004\012\uff79\001\002\000\004\012\uff74\001\002\000\004"
        + "\022\205\001\002\000\004\035\206\001\002\000\004\012"
        + "\uff77\001\002\000\004\035\210\001\002\000\004\015\211"
        + "\001\002\000\004\017\212\001\002\000\004\022\213\001"
        + "\002\000\004\035\214\001\002\000\004\012\uff7a\001\002"
        + "\000\004\017\216\001\002\000\004\022\217\001\002\000"
        + "\004\035\220\001\002\000\004\012\uff78\001\002\000\012"
        + "\003\131\017\130\020\133\021\137\001\002\000\004\012"
        + "\223\001\002\000\016\003\uffa0\012\uffa0\015\uffa0\026\uffa0"
        + "\031\uffa0\042\uffa0\001\002\000\016\003\uff9e\012\uff9e\015"
        + "\uff9e\026\uff9e\031\uff9e\042\uff9e\001\002\000\004\035\226"
        + "\001\002\000\004\015\227\001\002\000\010\003\231\017"
        + "\233\021\230\001\002\000\004\022\260\001\002\000\010"
        + "\012\uff81\017\243\021\242\001\002\000\004\012\uff8a\001"
        + "\002\000\004\022\234\001\002\000\004\035\235\001\002"
        + "\000\004\015\236\001\002\000\004\021\237\001\002\000"
        + "\004\022\240\001\002\000\004\035\241\001\002\000\004"
        + "\012\uff85\001\002\000\004\022\252\001\002\000\004\022"
        + "\244\001\002\000\004\035\245\001\002\000\004\015\246"
        + "\001\002\000\004\021\247\001\002\000\004\022\250\001"
        + "\002\000\004\035\251\001\002\000\004\012\uff83\001\002"
        + "\000\004\035\253\001\002\000\004\015\254\001\002\000"
        + "\004\017\255\001\002\000\004\022\256\001\002\000\004"
        + "\035\257\001\002\000\004\012\uff82\001\002\000\004\035"
        + "\261\001\002\000\004\015\262\001\002\000\004\017\263"
        + "\001\002\000\004\022\264\001\002\000\004\035\265\001"
        + "\002\000\004\012\uff84\001\002\000\004\022\u0122\001\002"
        + "\000\004\015\u011e\001\002\000\004\022\u011a\001\002\000"
        + "\010\003\231\017\233\021\230\001\002\000\004\022\376"
        + "\001\002\000\004\035\274\001\002\000\004\015\275\001"
        + "\002\000\012\003\300\017\304\020\303\021\277\001\002"
        + "\000\004\012\uff7e\001\002\000\004\022\370\001\002\000"
        + "\020\012\uff81\015\320\017\323\020\321\021\317\022\322"
        + "\035\316\001\002\000\004\012\uff88\001\002\000\004\012"
        + "\uff98\001\002\000\004\022\310\001\002\000\004\022\305"
        + "\001\002\000\004\035\306\001\002\000\004\015\307\001"
        + "\002\000\006\020\152\021\237\001\002\000\004\035\311"
        + "\001\002\000\004\015\312\001\002\000\006\017\160\021"
        + "\313\001\002\000\004\022\314\001\002\000\004\035\315"
        + "\001\002\000\004\012\uff96\001\002\000\004\015\361\001"
        + "\002\000\004\022\353\001\002\000\012\017\204\020\346"
        + "\021\345\035\203\001\002\000\004\022\337\001\002\000"
        + "\004\035\327\001\002\000\004\022\324\001\002\000\004"
        + "\035\325\001\002\000\006\012\uff76\015\326\001\002\000"
        + "\006\020\173\021\247\001\002\000\004\015\330\001\002"
        + "\000\010\017\200\020\332\021\331\001\002\000\004\022"
        + "\335\001\002\000\004\022\333\001\002\000\004\035\334"
        + "\001\002\000\004\012\uff93\001\002\000\004\035\336\001"
        + "\002\000\004\012\uff8e\001\002\000\004\035\340\001\002"
        + "\000\006\012\uff90\015\341\001\002\000\006\017\212\021"
        + "\342\001\002\000\004\022\343\001\002\000\004\035\344"
        + "\001\002\000\004\012\uff8f\001\002\000\004\022\351\001"
        + "\002\000\004\022\347\001\002\000\004\035\350\001\002"
        + "\000\004\012\uff91\001\002\000\004\035\352\001\002\000"
        + "\004\012\uff8c\001\002\000\004\035\354\001\002\000\006"
        + "\012\uff8b\015\355\001\002\000\006\017\255\020\356\001"
        + "\002\000\004\022\357\001\002\000\004\035\360\001\002"
        + "\000\004\012\uff94\001\002\000\010\017\216\020\363\021"
        + "\362\001\002\000\004\022\366\001\002\000\004\022\364"
        + "\001\002\000\004\035\365\001\002\000\004\012\uff92\001"
        + "\002\000\004\035\367\001\002\000\004\012\uff8d\001\002"
        + "\000\004\035\371\001\002\000\004\015\372\001\002\000"
        + "\006\017\263\020\373\001\002\000\004\022\374\001\002"
        + "\000\004\035\375\001\002\000\004\012\uff95\001\002\000"
        + "\004\035\377\001\002\000\004\015\u0100\001\002\000\010"
        + "\003\u0102\020\u0104\021\u0101\001\002\000\004\022\u0116\001"
        + "\002\000\014\015\u010b\020\u010a\021\u0109\022\u010c\035\u0108"
        + "\001\002\000\004\012\uff99\001\002\000\004\022\u0105\001"
        + "\002\000\004\035\u0106\001\002\000\004\015\u0107\001\002"
        + "\000\004\021\313\001\002\000\004\015\u0115\001\002\000"
        + "\004\022\u0112\001\002\000\004\022\u010f\001\002\000\006"
        + "\020\346\021\345\001\002\000\004\035\u010d\001\002\000"
        + "\004\015\u010e\001\002\000\006\020\332\021\331\001\002"
        + "\000\004\035\u0110\001\002\000\006\012\uff90\015\u0111\001"
        + "\002\000\004\021\342\001\002\000\004\035\u0113\001\002"
        + "\000\006\012\uff8b\015\u0114\001\002\000\004\020\356\001"
        + "\002\000\006\020\363\021\362\001\002\000\004\035\u0117"
        + "\001\002\000\004\015\u0118\001\002\000\004\020\373\001"
        + "\002\000\004\012\uff86\001\002\000\004\035\u011b\001\002"
        + "\000\004\015\u011c\001\002\000\010\003\231\017\233\021"
        + "\230\001\002\000\004\012\uff89\001\002\000\012\003\300"
        + "\017\304\020\303\021\277\001\002\000\004\012\uff7d\001"
        + "\002\000\004\012\uff97\001\002\000\004\012\uff87\001\002"
        + "\000\004\035\u0123\001\002\000\004\015\u0124\001\002\000"
        + "\010\003\144\017\146\020\145\001\002\000\004\012\uff7f"
        + "\001\002\000\004\035\u0127\001\002\000\004\015\u0128\001"
        + "\002\000\010\003\u0102\020\u0104\021\u0101\001\002\000\004"
        + "\012\uff9a\001\002\000\004\012\u012b\001\002\000\016\003"
        + "\uff9f\012\uff9f\015\uff9f\026\uff9f\031\uff9f\042\uff9f\001\002"
        + "\000\004\011\u012d\001\002\000\012\003\131\017\130\020"
        + "\133\021\137\001\002\000\004\012\u012f\001\002\000\016"
        + "\003\uffa1\012\uffa1\015\uffa1\026\uffa1\031\uffa1\042\uffa1\001"
        + "\002\000\004\026\100\001\002\000\004\012\uffc6\001\002"
        + "\000\016\003\uff61\012\uff61\015\uff61\016\uff61\026\uff61\031"
        + "\uff61\001\002\000\004\012\uff60\001\002\000\004\012\uff5e"
        + "\001\002\000\004\022\u0246\001\002\000\004\022\u0242\001"
        + "\002\000\004\022\u0233\001\002\000\004\022\u022d\001\002"
        + "\000\032\015\u0146\017\272\020\270\021\266\022\u014b\023"
        + "\u014a\024\u0147\025\u0144\032\027\033\026\035\u0148\036\u0145"
        + "\001\002\000\020\003\u0139\017\130\020\133\021\137\023"
        + "\u0136\024\u0135\025\u0138\001\002\000\004\012\u0141\001\002"
        + "\000\004\011\u013e\001\002\000\004\012\uff5f\001\002\000"
        + "\020\003\u0139\017\130\020\133\021\137\023\u0136\024\u0135"
        + "\025\u0138\001\002\000\004\012\u0140\001\002\000\016\003"
        + "\uff64\012\uff64\015\uff64\016\uff64\026\uff64\031\uff64\001\002"
        + "\000\016\003\uff62\012\uff62\015\uff62\016\uff62\026\uff62\031"
        + "\uff62\001\002\000\004\012\u0143\001\002\000\016\003\uff63"
        + "\012\uff63\015\uff63\016\uff63\026\uff63\031\uff63\001\002\000"
        + "\004\022\u0227\001\002\000\006\032\032\034\031\001\002"
        + "\000\016\003\u0218\017\233\021\230\023\u0217\024\u01b3\025"
        + "\u0204\001\002\000\004\022\u01ff\001\002\000\004\015\u01fc"
        + "\001\002\000\004\036\u01f8\001\002\000\004\022\u01e3\001"
        + "\002\000\010\032\027\033\026\035\u014d\001\002\000\004"
        + "\036\u01ad\001\002\000\004\015\u014e\001\002\000\020\003"
        + "\u0153\017\304\020\303\021\277\023\u0152\024\u0151\025\u014f"
        + "\001\002\000\004\022\u01a2\001\002\000\004\012\uff4f\001"
        + "\002\000\004\022\u019a\001\002\000\004\022\u0192\001\002"
        + "\000\036\012\uff81\015\320\017\323\020\321\021\317\022"
        + "\u015d\023\u015c\024\u0157\025\u0155\032\u015a\033\026\034\031"
        + "\035\u0158\036\u0156\001\002\000\004\012\uff5b\001\002\000"
        + "\004\022\u018e\001\002\000\006\032\032\034\031\001\002"
        + "\000\004\022\u0185\001\002\000\006\012\uff44\015\u017f\001"
        + "\002\000\004\015\u017b\001\002\000\006\015\uff31\036\uff33"
        + "\001\002\000\004\036\u0173\001\002\000\004\022\u016b\001"
        + "\002\000\010\032\027\033\026\035\u015f\001\002\000\004"
        + "\036\u0166\001\002\000\006\012\uff45\015\u0160\001\002\000"
        + "\012\017\200\020\332\021\331\025\u0161\001\002\000\004"
        + "\022\u0162\001\002\000\006\032\027\033\026\001\002\000"
        + "\004\036\u0164\001\002\000\006\032\032\034\031\001\002"
        + "\000\004\012\uff49\001\002\000\006\032\032\034\031\001"
        + "\002\000\006\012\uff53\015\u0168\001\002\000\004\022\u0169"
        + "\001\002\000\004\035\u016a\001\002\000\004\012\uff47\001"
        + "\002\000\004\035\u016c\001\002\000\004\015\u016d\001\002"
        + "\000\004\025\u016e\001\002\000\004\022\u016f\001\002\000"
        + "\006\032\027\033\026\001\002\000\004\036\u0171\001\002"
        + "\000\006\032\032\034\031\001\002\000\004\012\uff4a\001"
        + "\002\000\006\032\032\034\031\001\002\000\004\015\u0175"
        + "\001\002\000\006\022\u0177\024\u0176\001\002\000\004\022"
        + "\u0179\001\002\000\004\035\u0178\001\002\000\004\012\uff46"
        + "\001\002\000\004\035\u017a\001\002\000\004\012\uff55\001"
        + "\002\000\004\024\u017c\001\002\000\004\022\u017d\001\002"
        + "\000\004\035\u017e\001\002\000\004\012\uff56\001\002\000"
        + "\012\017\216\020\363\021\362\025\u0180\001\002\000\004"
        + "\022\u0181\001\002\000\006\032\027\033\026\001\002\000"
        + "\004\036\u0183\001\002\000\006\032\032\034\031\001\002"
        + "\000\004\012\uff54\001\002\000\004\035\u0186\001\002\000"
        + "\004\015\u0187\001\002\000\004\025\u0188\001\002\000\004"
        + "\022\u0189\001\002\000\006\032\027\033\026\001\002\000"
        + "\004\036\u018b\001\002\000\006\032\032\034\031\001\002"
        + "\000\004\012\uff57\001\002\000\004\012\uff48\001\002\000"
        + "\006\032\027\033\026\001\002\000\004\036\u0190\001\002"
        + "\000\006\032\032\034\031\001\002\000\004\012\uff52\001"
        + "\002\000\004\035\u0193\001\002\000\004\015\u0194\001\002"
        + "\000\004\025\u0195\001\002\000\004\022\u0196\001\002\000"
        + "\006\032\027\033\026\001\002\000\004\036\u0198\001\002"
        + "\000\006\032\032\034\031\001\002\000\004\012\uff4c\001"
        + "\002\000\004\035\u019b\001\002\000\004\015\u019c\001\002"
        + "\000\004\025\u019d\001\002\000\004\022\u019e\001\002\000"
        + "\006\032\027\033\026\001\002\000\004\036\u01a0\001\002"
        + "\000\006\032\032\034\031\001\002\000\004\012\uff59\001"
        + "\002\000\006\032\027\033\026\001\002\000\004\036\u01a4"
        + "\001\002\000\006\032\032\034\031\001\002\000\004\015"
        + "\u01a6\001\002\000\006\023\u01a7\024\u01a8\001\002\000\004"
        + "\022\u01ab\001\002\000\004\022\u01a9\001\002\000\004\035"
        + "\u01aa\001\002\000\004\012\uff58\001\002\000\004\035\u01ac"
        + "\001\002\000\004\012\uff4b\001\002\000\006\032\032\034"
        + "\031\001\002\000\004\015\u01af\001\002\000\010\003\u01b1"
        + "\023\u01b2\024\u01b3\001\002\000\004\012\uff41\001\002\000"
        + "\014\015\u01c3\022\u01c4\023\u01c1\024\u01c2\035\u01c0\001\002"
        + "\000\004\022\u01ba\001\002\000\004\022\u01b4\001\002\000"
        + "\004\035\u01b5\001\002\000\004\015\u01b6\001\002\000\004"
        + "\023\u01b7\001\002\000\004\022\u01b8\001\002\000\004\035"
        + "\u01b9\001\002\000\004\012\uff3c\001\002\000\004\035\u01bb"
        + "\001\002\000\004\015\u01bc\001\002\000\004\024\u01bd\001"
        + "\002\000\004\022\u01be\001\002\000\004\035\u01bf\001\002"
        + "\000\004\012\uff3d\001\002\000\004\015\u01dc\001\002\000"
        + "\004\022\u01d6\001\002\000\004\022\u01d0\001\002\000\004"
        + "\023\u01cd\001\002\000\004\035\u01c5\001\002\000\004\015"
        + "\u01c6\001\002\000\006\023\u01c7\024\u01c8\001\002\000\004"
        + "\022\u01cb\001\002\000\004\022\u01c9\001\002\000\004\035"
        + "\u01ca\001\002\000\004\012\uff3a\001\002\000\004\035\u01cc"
        + "\001\002\000\004\012\uff37\001\002\000\004\022\u01ce\001"
        + "\002\000\004\035\u01cf\001\002\000\004\012\uff35\001\002"
        + "\000\004\035\u01d1\001\002\000\004\015\u01d2\001\002\000"
        + "\004\023\u01d3\001\002\000\004\022\u01d4\001\002\000\004"
        + "\035\u01d5\001\002\000\004\012\uff38\001\002\000\004\035"
        + "\u01d7\001\002\000\006\012\uff34\015\u01d8\001\002\000\004"
        + "\024\u01d9\001\002\000\004\022\u01da\001\002\000\004\035"
        + "\u01db\001\002\000\004\012\uff3b\001\002\000\006\023\u01dd"
        + "\024\u01de\001\002\000\004\022\u01e1\001\002\000\004\022"
        + "\u01df\001\002\000\004\035\u01e0\001\002\000\004\012\uff39"
        + "\001\002\000\004\035\u01e2\001\002\000\004\012\uff36\001"
        + "\002\000\004\035\u01e4\001\002\000\004\015\u01e5\001\002"
        + "\000\010\003\u01e6\024\u0151\025\u01e8\001\002\000\020\022"
        + "\u01f0\024\u0157\025\u0155\032\u015a\033\026\034\031\035\u01ee"
        + "\001\002\000\004\012\uff5c\001\002\000\004\022\u01e9\001"
        + "\002\000\006\032\027\033\026\001\002\000\004\036\u01eb"
        + "\001\002\000\006\032\032\034\031\001\002\000\004\015"
        + "\u01ed\001\002\000\004\024\u01a8\001\002\000\004\015\u01f7"
        + "\001\002\000\004\036\u01f4\001\002\000\006\032\027\033"
        + "\026\001\002\000\004\036\u01f2\001\002\000\006\032\032"
        + "\034\031\001\002\000\004\012\uff53\001\002\000\006\032"
        + "\032\034\031\001\002\000\004\015\u01f6\001\002\000\004"
        + "\024\u0176\001\002\000\004\025\u0180\001\002\000\006\032"
        + "\032\034\031\001\002\000\004\015\u01fa\001\002\000\010"
        + "\003\u01b1\023\u01b2\024\u01b3\001\002\000\004\012\uff40\001"
        + "\002\000\020\003\u0153\017\304\020\303\021\277\023\u0152"
        + "\024\u0151\025\u014f\001\002\000\004\012\uff4e\001\002\000"
        + "\004\012\uff5a\001\002\000\004\035\u0200\001\002\000\004"
        + "\015\u0201\001\002\000\010\003\u0202\023\u0152\025\u0204\001"
        + "\002\000\016\022\u020c\023\u015c\032\027\033\026\035\u020b"
        + "\036\u0156\001\002\000\004\012\uff50\001\002\000\004\022"
        + "\u0205\001\002\000\006\032\027\033\026\001\002\000\004"
        + "\036\u0207\001\002\000\006\032\032\034\031\001\002\000"
        + "\004\015\u0209\001\002\000\004\023\u01a7\001\002\000\004"
        + "\036\u0212\001\002\000\004\012\uff44\001\002\000\010\032"
        + "\027\033\026\035\u020e\001\002\000\004\036\u0210\001\002"
        + "\000\006\012\uff45\015\u020f\001\002\000\004\025\u0161\001"
        + "\002\000\006\032\032\034\031\001\002\000\004\015\u0168"
        + "\001\002\000\006\032\032\034\031\001\002\000\004\015"
        + "\u0214\001\002\000\004\022\u0177\001\002\000\004\012\uff3e"
        + "\001\002\000\004\012\uff4d\001\002\000\004\022\u0221\001"
        + "\002\000\030\012\uff81\015\u01c3\017\243\021\242\022\u021b"
        + "\023\u021a\024\u01c2\032\027\033\026\035\u0219\036\u0156\001"
        + "\002\000\006\012\uff44\015\u01dc\001\002\000\004\022\u021e"
        + "\001\002\000\010\032\027\033\026\035\u021c\001\002\000"
        + "\006\012\uff45\015\u021d\001\002\000\010\023\u01c7\024\u01c8"
        + "\025\u0161\001\002\000\004\035\u021f\001\002\000\006\012"
        + "\uff34\015\u0220\001\002\000\006\024\u01d9\025\u016e\001\002"
        + "\000\004\035\u0222\001\002\000\004\015\u0223\001\002\000"
        + "\006\024\u01bd\025\u0195\001\002\000\004\015\u0225\001\002"
        + "\000\010\003\u01b1\023\u01b2\024\u01b3\001\002\000\004\012"
        + "\uff3f\001\002\000\006\032\027\033\026\001\002\000\004"
        + "\036\u0229\001\002\000\006\032\032\034\031\001\002\000"
        + "\004\015\u022b\001\002\000\010\003\u01b1\023\u01b2\024\u01b3"
        + "\001\002\000\004\012\uff42\001\002\000\006\032\027\033"
        + "\026\001\002\000\004\036\u022f\001\002\000\006\032\032"
        + "\034\031\001\002\000\004\015\u0231\001\002\000\010\003"
        + "\u01b1\023\u01b2\024\u01b3\001\002\000\004\012\uff43\001\002"
        + "\000\004\011\u0234\001\002\000\012\003\u0235\023\u0136\024"
        + "\u0135\025\u0138\001\002\000\024\015\u0238\022\u023a\023\u014a"
        + "\024\u0147\025\u0144\032\027\033\026\035\u0239\036\u0145\001"
        + "\002\000\004\012\u0237\001\002\000\016\003\uff65\012\uff65"
        + "\015\uff65\016\uff65\026\uff65\031\uff65\001\002\000\012\003"
        + "\u0241\023\u0217\024\u01b3\025\u0204\001\002\000\004\015\u0240"
        + "\001\002\000\010\032\027\033\026\035\u023b\001\002\000"
        + "\004\015\u023c\001\002\000\012\003\u023d\023\u0152\024\u0151"
        + "\025\u014f\001\002\000\024\022\u023f\023\u015c\024\u0157\025"
        + "\u0155\032\u015a\033\026\034\031\035\u023e\036\u0156\001\002"
        + "\000\006\012\uff44\015\u01f7\001\002\000\010\032\027\033"
        + "\026\035\u020e\001\002\000\012\003\u023d\023\u0152\024\u0151"
        + "\025\u014f\001\002\000\022\015\u01c3\022\u021b\023\u021a\024"
        + "\u01c2\032\027\033\026\035\u0219\036\u0156\001\002\000\004"
        + "\035\u0243\001\002\000\004\015\u0244\001\002\000\010\003"
        + "\u01e6\024\u0151\025\u01e8\001\002\000\004\012\uff5d\001\002"
        + "\000\004\035\u0247\001\002\000\004\015\u0248\001\002\000"
        + "\010\003\u0202\023\u0152\025\u0204\001\002\000\004\012\uff51"
        + "\001\002\000\010\003\113\016\072\042\074\001\002\000"
        + "\004\015\u0250\001\002\000\004\015\u024e\001\002\000\004"
        + "\012\uffcc\001\002\000\006\003\120\016\072\001\002\000"
        + "\004\012\uffc7\001\002\000\006\003\u0251\042\074\001\002"
        + "\000\022\003\u0235\011\u0253\012\u0132\022\u0254\023\u0136\024"
        + "\u0135\025\u0138\042\u0137\001\002\000\004\012\uffc8\001\002"
        + "\000\012\003\u0235\023\u0136\024\u0135\025\u0138\001\002\000"
        + "\004\011\u0255\001\002\000\012\003\u0235\023\u0136\024\u0135"
        + "\025\u0138\001\002\000\010\003\u0251\026\100\042\074\001"
        + "\002\000\004\015\u025c\001\002\000\004\015\u025a\001\002"
        + "\000\004\012\uffcd\001\002\000\004\026\100\001\002\000"
        + "\004\012\uffc9\001\002\000\006\003\u0251\042\074\001\002"
        + "\000\004\012\uffca\001\002\000\004\011\u025f\001\002\000"
        + "\010\003\u0262\027\u0260\030\u0263\001\002\000\004\022\u0291"
        + "\001\002\000\004\012\u0290\001\002\000\014\015\u026c\022"
        + "\u026d\027\u026a\030\u026e\035\u026b\001\002\000\004\022\u0264"
        + "\001\002\000\004\035\u0265\001\002\000\004\015\u0266\001"
        + "\002\000\004\027\u0267\001\002\000\004\022\u0268\001\002"
        + "\000\004\035\u0269\001\002\000\004\012\uff71\001\002\000"
        + "\004\022\u028a\001\002\000\004\015\u0283\001\002\000\006"
        + "\027\u027d\030\u027e\001\002\000\004\035\u0275\001\002\000"
        + "\004\022\u026f\001\002\000\004\035\u0270\001\002\000\006"
        + "\012\uff6c\015\u0271\001\002\000\004\027\u0272\001\002\000"
        + "\004\022\u0273\001\002\000\004\035\u0274\001\002\000\004"
        + "\012\uff6b\001\002\000\006\012\uff67\015\u0276\001\002\000"
        + "\006\027\u0277\030\u0278\001\002\000\004\022\u027b\001\002"
        + "\000\004\022\u0279\001\002\000\004\035\u027a\001\002\000"
        + "\004\012\uff6f\001\002\000\004\035\u027c\001\002\000\004"
        + "\012\uff6a\001\002\000\004\022\u0281\001\002\000\004\022"
        + "\u027f\001\002\000\004\035\u0280\001\002\000\004\012\uff6d"
        + "\001\002\000\004\035\u0282\001\002\000\004\012\uff68\001"
        + "\002\000\006\027\u0284\030\u0285\001\002\000\004\022\u0288"
        + "\001\002\000\004\022\u0286\001\002\000\004\035\u0287\001"
        + "\002\000\004\012\uff6e\001\002\000\004\035\u0289\001\002"
        + "\000\004\012\uff69\001\002\000\004\035\u028b\001\002\000"
        + "\004\015\u028c\001\002\000\004\030\u028d\001\002\000\004"
        + "\022\u028e\001\002\000\004\035\u028f\001\002\000\004\012"
        + "\uff70\001\002\000\016\003\uff73\012\uff73\015\uff73\016\uff73"
        + "\031\uff73\042\uff73\001\002\000\004\035\u0292\001\002\000"
        + "\004\015\u0293\001\002\000\004\030\u0294\001\002\000\004"
        + "\022\u0295\001\002\000\004\035\u0296\001\002\000\004\012"
        + "\uff72\001\002\000\014\003\uff61\012\uffcf\016\uff61\026\uff61"
        + "\031\uff61\001\002\000\004\022\u02a0\001\002\000\004\036"
        + "\u029e\001\002\000\010\011\u013e\032\027\033\026\001\002"
        + "\000\004\036\u029c\001\002\000\006\032\032\034\031\001"
        + "\002\000\016\003\uffa4\012\uffa4\015\uffa4\016\uffa4\026\uffa4"
        + "\042\uffa4\001\002\000\006\032\032\034\031\001\002\000"
        + "\016\003\uffa3\012\uffa3\015\uffa3\016\uffa3\026\uffa3\042\uffa3"
        + "\001\002\000\006\032\027\033\026\001\002\000\004\036"
        + "\u02a2\001\002\000\006\032\032\034\031\001\002\000\016"
        + "\003\uffa5\012\uffa5\015\uffa5\016\uffa5\026\uffa5\042\uffa5\001"
        + "\002\000\004\011\u02a5\001\002\000\012\003\u0235\023\u0136"
        + "\024\u0135\025\u0138\001\002\000\004\012\u02a7\001\002\000"
        + "\016\003\uff66\012\uff66\015\uff66\016\uff66\026\uff66\031\uff66"
        + "\001\002\000\010\003\u02a9\031\102\042\074\001\002\000"
        + "\030\003\u0235\011\u0253\012\u0132\022\u02b9\023\u0136\024\u0135"
        + "\025\u0138\031\u0298\032\027\033\026\042\u0137\001\002\000"
        + "\010\003\u02b3\026\100\031\102\001\002\000\004\012\uffc4"
        + "\001\002\000\010\003\u0251\026\100\042\074\001\002\000"
        + "\006\003\u0251\042\074\001\002\000\004\012\uffc3\001\002"
        + "\000\004\026\100\001\002\000\004\012\uffbf\001\002\000"
        + "\004\012\uffc0\001\002\000\006\003\u02b3\031\102\001\002"
        + "\000\012\022\u02b7\031\u0298\032\027\033\026\001\002\000"
        + "\004\012\uffc1\001\002\000\004\026\100\001\002\000\004"
        + "\012\uffbc\001\002\000\006\032\027\033\026\001\002\000"
        + "\004\012\uffbb\001\002\000\010\011\u0255\032\027\033\026"
        + "\001\002\000\004\012\uffc2\001\002\000\006\003\u02b3\031"
        + "\102\001\002\000\006\003\u0251\042\074\001\002\000\004"
        + "\012\uffbe\001\002\000\004\012\uffbd\001\002\000\004\011"
        + "\u02c0\001\002\000\012\003\131\017\130\020\133\021\137"
        + "\001\002\000\004\012\u02c2\001\002\000\016\003\uffa2\012"
        + "\uffa2\015\uffa2\026\uffa2\031\uffa2\042\uffa2\001\002\000\010"
        + "\003\uffd7\010\uffd7\015\uffd7\001\002\000\010\003\u02b3\026"
        + "\100\031\102\001\002\000\010\003\u02c6\016\072\031\102"
        + "\001\002\000\026\003\131\011\127\016\126\017\130\020"
        + "\133\021\137\022\u02ce\031\u0298\032\027\033\026\001\002"
        + "\000\004\012\uffb0\001\002\000\010\003\120\016\072\026"
        + "\100\001\002\000\004\026\100\001\002\000\006\003\120"
        + "\016\072\001\002\000\004\012\uffaf\001\002\000\004\012"
        + "\uffab\001\002\000\004\012\uffac\001\002\000\010\011\221"
        + "\032\027\033\026\001\002\000\006\003\u02b3\031\102\001"
        + "\002\000\004\012\uffad\001\002\000\006\003\120\016\072"
        + "\001\002\000\004\012\uffa8\001\002\000\004\012\uffa7\001"
        + "\002\000\006\003\u02b3\031\102\001\002\000\004\012\uffae"
        + "\001\002\000\004\026\100\001\002\000\004\012\uffaa\001"
        + "\002\000\004\012\uffa9\001\002\000\004\012\uffba\001\002"
        + "\000\010\003\u02a9\031\102\042\074\001\002\000\040\003"
        + "\u0139\011\u013a\012\u0132\016\126\017\130\020\133\021\137"
        + "\022\u029a\023\u0136\024\u0135\025\u0138\031\u0298\032\027\033"
        + "\026\042\u0137\001\002\000\010\003\u02b3\026\100\031\102"
        + "\001\002\000\010\003\113\016\072\042\074\001\002\000"
        + "\006\003\u0251\042\074\001\002\000\006\003\120\016\072"
        + "\001\002\000\004\012\uffb9\001\002\000\004\012\uffb5\001"
        + "\002\000\004\012\uffb6\001\002\000\006\003\u02b3\031\102"
        + "\001\002\000\004\012\uffb7\001\002\000\006\003\120\016"
        + "\072\001\002\000\004\012\uffb2\001\002\000\004\012\uffb1"
        + "\001\002\000\006\003\u02b3\031\102\001\002\000\006\003"
        + "\u0251\042\074\001\002\000\004\012\uffb8\001\002\000\004"
        + "\012\uffb4\001\002\000\004\012\uffb3\001\002\000\004\015"
        + "\u02f3\001\002\000\004\010\u02f2\001\002\000\004\011\065"
        + "\001\002\000\010\003\u02ed\010\uffd5\015\u02ef\001\002\000"
        + "\004\010\uffd6\001\002\000\006\012\uffe0\015\uffe0\001\002"
        + "\000\004\011\065\001\002\000\010\003\u02ed\010\uffd5\015"
        + "\u02ef\001\002\000\004\010\uffd4\001\002\000\004\007\u02f7"
        + "\001\002\000\006\003\u02f9\011\u02fa\001\002\000\010\003"
        + "\u0301\010\uffda\015\u0302\001\002\000\004\011\u02fd\001\002"
        + "\000\014\003\076\016\072\026\100\031\102\042\074\001"
        + "\002\000\004\012\u02fc\001\002\000\010\003\uffdd\010\uffdd"
        + "\015\uffdd\001\002\000\014\003\076\016\072\026\100\031"
        + "\102\042\074\001\002\000\004\012\u02ff\001\002\000\010"
        + "\003\uffdc\010\uffdc\015\uffdc\001\002\000\004\010\u030a\001"
        + "\002\000\010\003\u02f9\011\u02fa\015\u0306\001\002\000\006"
        + "\003\u02f9\011\u02fa\001\002\000\010\003\u0301\010\uffda\015"
        + "\u0302\001\002\000\004\010\uffdb\001\002\000\010\003\u0301"
        + "\010\uffda\015\u0302\001\002\000\006\003\u02f9\011\u02fa\001"
        + "\002\000\010\003\u0301\010\uffda\015\u0302\001\002\000\004"
        + "\010\uffd9\001\002\000\004\010\uffd8\001\002\000\006\012"
        + "\uffe5\015\uffe5\001\002\000\010\003\u030d\004\015\006\016"
        + "\001\002\000\004\015\u0324\001\002\000\020\003\u02ed\004"
        + "\u031d\006\u0315\007\u0313\010\uffd5\015\u02ef\022\u0314\001\002"
        + "\000\004\015\u0310\001\002\000\004\012\ufff1\001\002\000"
        + "\006\003\u0312\006\016\001\002\000\004\012\uffeb\001\002"
        + "\000\010\006\u0315\007\u0313\022\u0314\001\002\000\006\003"
        + "\021\031\023\001\002\000\004\007\u0319\001\002\000\004"
        + "\022\u0316\001\002\000\004\007\u0317\001\002\000\006\003"
        + "\021\031\023\001\002\000\006\012\ufffb\015\ufffb\001\002"
        + "\000\006\003\021\031\023\001\002\000\006\012\ufffa\015"
        + "\ufffa\001\002\000\006\012\ufff9\015\ufff9\001\002\000\004"
        + "\010\u0323\001\002\000\004\022\u031e\001\002\000\004\007"
        + "\u031f\001\002\000\004\011\065\001\002\000\010\003\u02ed"
        + "\010\uffd5\015\u02ef\001\002\000\004\010\u0322\001\002\000"
        + "\006\012\uffdf\015\uffdf\001\002\000\006\012\uffde\015\uffde"
        + "\001\002\000\006\003\u0325\004\015\001\002\000\012\003"
        + "\u02ed\004\u031d\010\uffd5\015\u02ef\001\002\000\004\012\uffea"
        + "\001\002\000\010\003\u0329\005\014\006\016\001\002\000"
        + "\004\015\u0341\001\002\000\016\003\u02f9\005\u0330\006\u0315"
        + "\007\u032f\011\u02fa\022\u0331\001\002\000\004\015\u032c\001"
        + "\002\000\004\012\ufff0\001\002\000\006\003\u0312\006\016"
        + "\001\002\000\004\012\uffe9\001\002\000\010\003\u0301\010"
        + "\uffda\015\u0302\001\002\000\010\003\u0334\011\u02fa\031\023"
        + "\001\002\000\004\022\u0337\001\002\000\004\007\u0332\001"
        + "\002\000\010\003\u0334\011\u02fa\031\023\001\002\000\010"
        + "\003\u0301\010\uffda\015\u0302\001\002\000\016\011\u02fd\022"
        + "\041\031\042\032\027\033\026\036\043\001\002\000\004"
        + "\010\u0336\001\002\000\006\012\uffe3\015\uffe3\001\002\000"
        + "\004\007\u0338\001\002\000\006\003\u02f9\011\u02fa\001\002"
        + "\000\010\003\u0301\010\uffda\015\u0302\001\002\000\004\010"
        + "\u033b\001\002\000\006\012\uffe4\015\uffe4\001\002\000\010"
        + "\003\u0301\010\uffda\015\u0302\001\002\000\004\010\u033e\001"
        + "\002\000\006\012\uffe2\015\uffe2\001\002\000\004\010\u0340"
        + "\001\002\000\006\012\uffe1\015\uffe1\001\002\000\006\003"
        + "\u0342\005\014\001\002\000\014\003\u02f9\005\u0330\007\u0344"
        + "\011\u02fa\022\u0345\001\002\000\004\012\uffe8\001\002\000"
        + "\006\003\u02f9\011\u02fa\001\002\000\004\007\u0346\001\002"
        + "\000\006\003\u02f9\011\u02fa\001\002\000\014\003\u034d\004"
        + "\015\005\014\006\016\011\065\001\002\000\006\011\u02fd"
        + "\015\u02f3\001\002\000\004\015\u0354\001\002\000\004\012"
        + "\uffec\001\002\000\004\012\uffed\001\002\000\004\012\uffee"
        + "\001\002\000\024\003\u0348\004\u031d\005\u0330\006\u0315\007"
        + "\u032f\010\uffd5\011\u02fa\015\u02ef\022\u0331\001\002\000\004"
        + "\015\u0352\001\002\000\004\015\u0350\001\002\000\010\003"
        + "\u0329\005\014\006\016\001\002\000\004\012\uffe6\001\002"
        + "\000\010\003\u0353\004\015\005\014\001\002\000\022\003"
        + "\u0348\004\u031d\005\u0330\007\u0344\010\uffd5\011\u02fa\015\u02ef"
        + "\022\u0345\001\002\000\010\003\u030d\004\015\006\016\001"
        + "\002\000\004\012\uffe7\001\002\000\010\003\u0353\004\015"
        + "\005\014\001\002\000\004\015\u035b\001\002\000\004\015"
        + "\u035a\001\002\000\004\012\uffef\001\002\000\006\003\u0342"
        + "\005\014\001\002\000\006\003\u0325\004\015\001\002\000"
        + "\004\002\000\001\002\000\004\002\001\001\002\000\004"
        + "\002\ufffd\001\002\000\004\012\u0363\001\002\000\012\003"
        + "\011\004\015\005\014\006\016\001\002\000\004\012\u0362"
        + "\001\002\000\004\002\uffff\001\002\000\004\002\ufffe\001"
        + "\002"});

    /**
     * Access to parse-action table.
     */
    public short[][] action_table() {
        return _action_table;
    }

    /** <code>reduce_goto</code> table.
     */
    protected static final short[][] _reduce_table
            = unpackFromStrings(new String[]{
        "\000\u0361\000\004\002\004\001\001\000\012\003\u035e\004"
        + "\012\005\011\062\007\001\001\000\002\001\001\000\012"
        + "\003\006\004\012\005\011\062\007\001\001\000\002\001"
        + "\001\000\002\001\001\000\006\061\u031b\070\u032d\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\063\021\001\001\000\004\036\037\001\001\000\002\001"
        + "\001\000\002\001\001\000\004\036\024\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\004\037"
        + "\032\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\064\034\001\001\000\002\001\001\000\002\001\001\000"
        + "\004\063\036\001\001\000\002\001\001\000\002\001\001"
        + "\000\004\036\052\001\001\000\002\001\001\000\004\037"
        + "\043\001\001\000\004\064\044\001\001\000\002\001\001"
        + "\000\004\036\046\001\001\000\002\001\001\000\004\037"
        + "\050\001\001\000\004\064\051\001\001\000\002\001\001"
        + "\000\002\001\001\000\004\037\054\001\001\000\004\064"
        + "\055\001\001\000\002\001\001\000\004\037\057\001\001"
        + "\000\004\064\060\001\001\000\002\001\001\000\002\001"
        + "\001\000\004\060\063\001\001\000\004\061\u02ed\001\001"
        + "\000\024\006\067\007\102\014\076\021\070\026\074\033"
        + "\100\034\072\046\065\050\066\001\001\000\012\022\u02d8"
        + "\033\u02dc\034\u02d9\050\u02db\001\001\000\012\027\u02c6\033"
        + "\u02c7\034\u02c3\046\u02c4\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\012\015\u02aa\033\u02ab\046"
        + "\u02a7\050\u02a9\001\001\000\002\001\001\000\002\001\001"
        + "\000\024\035\134\036\u0298\040\133\042\131\044\124\051"
        + "\u013a\052\u0132\054\u013c\056\u0133\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\004\036\104\001\001\000\002\001\001"
        + "\000\004\037\106\001\001\000\002\001\001\000\012\010"
        + "\114\034\110\046\111\050\113\001\001\000\002\001\001"
        + "\000\002\001\001\000\022\035\134\040\133\042\131\044"
        + "\124\051\u013a\052\u0132\054\u013c\056\u0133\001\001\000\002"
        + "\001\001\000\002\001\001\000\010\013\121\034\116\046"
        + "\120\001\001\000\002\001\001\000\012\035\134\040\133"
        + "\042\131\044\124\001\001\000\002\001\001\000\002\001"
        + "\001\000\004\034\123\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\012\035\u0129\040\133\042"
        + "\131\044\124\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\004\045\142\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\012\035\221\040\133\042\131\044\124\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\004\043\231\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\004\043\u0118\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\010\041\301\043\300"
        + "\045\275\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\004\041\u0102\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\004\043\u011c\001\001\000\002"
        + "\001\001\000\010\041\u011f\043\u0120\045\u011e\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\004\045\u0124\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\041\u0128\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\012\035\u012d\040\133"
        + "\042\131\044\124\001\001\000\002\001\001\000\002\001"
        + "\001\000\004\046\u0130\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\004\036\u0148\001\001\000\022\035\u0129\040\133\042"
        + "\131\044\124\051\u0141\052\u0132\054\u013c\056\u0133\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\022\035\221\040\133\042\131\044\124\051\u013e\052\u0132"
        + "\054\u013c\056\u0133\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\004\037\u0223\001\001\000\010\043"
        + "\u0118\055\u0215\057\u0214\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\004\036"
        + "\u014b\001\001\000\002\001\001\000\002\001\001\000\014"
        + "\041\301\043\300\045\275\053\u0153\055\u014f\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\006\036\u015a\037\u0158\001\001\000\002\001"
        + "\001\000\002\001\001\000\004\037\u018c\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\004\036\u015d"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\004\036\u0162\001\001\000\002"
        + "\001\001\000\004\037\u0164\001\001\000\002\001\001\000"
        + "\004\037\u0166\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\036\u016f\001\001\000\002\001\001\000\004\037\u0171\001"
        + "\001\000\002\001\001\000\004\037\u0173\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\036\u0181\001\001\000\002\001\001\000\004\037\u0183\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\004\036\u0189\001"
        + "\001\000\002\001\001\000\004\037\u018b\001\001\000\002"
        + "\001\001\000\002\001\001\000\004\036\u018e\001\001\000"
        + "\002\001\001\000\004\037\u0190\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\004\036\u0196\001\001\000\002\001\001"
        + "\000\004\037\u0198\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\004\036\u019e\001\001\000\002\001\001\000\004\037"
        + "\u01a0\001\001\000\002\001\001\000\004\036\u01a2\001\001"
        + "\000\002\001\001\000\004\037\u01a4\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\004\037\u01ad\001\001\000\002\001\001"
        + "\000\004\057\u01af\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\004\053"
        + "\u01e6\001\001\000\006\036\u01ee\037\u0158\001\001\000\002"
        + "\001\001\000\002\001\001\000\004\036\u01e9\001\001\000"
        + "\002\001\001\000\004\037\u01eb\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\004\036\u01f0\001\001\000\002\001\001\000\004\037\u01f2"
        + "\001\001\000\002\001\001\000\004\037\u01f4\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\037\u01f8\001\001\000\002\001\001\000\004\057\u01fa\001"
        + "\001\000\002\001\001\000\014\041\u011f\043\u0120\045\u011e"
        + "\053\u01fd\055\u01fc\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\004\055\u0202"
        + "\001\001\000\004\036\u0209\001\001\000\002\001\001\000"
        + "\002\001\001\000\004\036\u0205\001\001\000\002\001\001"
        + "\000\004\037\u0207\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\004\036\u020c"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\004\037\u0210\001\001\000\002\001\001\000\004"
        + "\037\u0212\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\036\u0209\001\001\000\002\001\001\000\002\001\001\000"
        + "\004\036\u020c\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\004\057\u0225\001\001\000\002\001\001\000"
        + "\004\036\u0227\001\001\000\002\001\001\000\004\037\u0229"
        + "\001\001\000\002\001\001\000\004\057\u022b\001\001\000"
        + "\002\001\001\000\004\036\u022d\001\001\000\002\001\001"
        + "\000\004\037\u022f\001\001\000\002\001\001\000\004\057"
        + "\u0231\001\001\000\002\001\001\000\002\001\001\000\012"
        + "\051\u0235\052\u0132\054\u013c\056\u0133\001\001\000\004\036"
        + "\u0148\001\001\000\002\001\001\000\002\001\001\000\006"
        + "\055\u0215\057\u0214\001\001\000\002\001\001\000\004\036"
        + "\u014b\001\001\000\002\001\001\000\006\053\u0153\055\u014f"
        + "\001\001\000\006\036\u015a\037\u0158\001\001\000\002\001"
        + "\001\000\004\036\u015d\001\001\000\006\053\u01fd\055\u01fc"
        + "\001\001\000\004\036\u0209\001\001\000\002\001\001\000"
        + "\002\001\001\000\004\053\u0244\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\004\055\u0248\001"
        + "\001\000\002\001\001\000\010\012\u024c\034\u024a\050\u024b"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\004\034\u024e\001\001\000\002\001\001\000\004"
        + "\050\u0251\001\001\000\012\051\u013a\052\u0132\054\u013c\056"
        + "\u0133\001\001\000\002\001\001\000\012\051\u0141\052\u0132"
        + "\054\u013c\056\u0133\001\001\000\002\001\001\000\012\051"
        + "\u013e\052\u0132\054\u013c\056\u0133\001\001\000\010\011\u0258"
        + "\046\u0256\050\u0257\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\004\046\u025a\001\001\000\002"
        + "\001\001\000\004\050\u025c\001\001\000\002\001\001\000"
        + "\002\001\001\000\004\047\u0260\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\004\036\u029a\001\001"
        + "\000\002\001\001\000\004\037\u029c\001\001\000\002\001"
        + "\001\000\004\037\u029e\001\001\000\002\001\001\000\004"
        + "\036\u02a0\001\001\000\002\001\001\000\004\037\u02a2\001"
        + "\001\000\002\001\001\000\002\001\001\000\012\051\u02a5"
        + "\052\u0132\054\u013c\056\u0133\001\001\000\002\001\001\000"
        + "\002\001\001\000\010\017\u02b9\033\u02bb\050\u02ba\001\001"
        + "\000\014\036\u0298\051\u013a\052\u0132\054\u013c\056\u0133\001"
        + "\001\000\010\020\u02b3\033\u02b4\046\u02b1\001\001\000\002"
        + "\001\001\000\010\016\u02ad\046\u02ac\050\u02ae\001\001\000"
        + "\004\050\u02b0\001\001\000\002\001\001\000\004\046\u02af"
        + "\001\001\000\002\001\001\000\002\001\001\000\004\033"
        + "\u02b7\001\001\000\004\036\u0298\001\001\000\002\001\001"
        + "\000\004\046\u02b5\001\001\000\002\001\001\000\004\036"
        + "\u029a\001\001\000\002\001\001\000\004\036\u029a\001\001"
        + "\000\002\001\001\000\004\033\u02bd\001\001\000\004\050"
        + "\u02bc\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\012\035\u02c0\040\133\042\131\044\124\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\010\031\u02d4\033\u02d5\046\u02d3\001\001\000\010\032"
        + "\u02cf\033\u02d0\034\u02ce\001\001\000\014\035\134\036\u0298"
        + "\040\133\042\131\044\124\001\001\000\002\001\001\000"
        + "\010\030\u02ca\034\u02c8\046\u02c9\001\001\000\004\046\u02cc"
        + "\001\001\000\004\034\u02cb\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\004\036\u029a\001\001"
        + "\000\004\033\u02d2\001\001\000\002\001\001\000\004\034"
        + "\u02d1\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\033\u02d7\001\001\000\002\001\001\000\004\046\u02d6\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\010\024\u02e9\033\u02e8\050\u02e7\001\001\000\024\035"
        + "\134\036\u0298\040\133\042\131\044\124\051\u013a\052\u0132"
        + "\054\u013c\056\u0133\001\001\000\010\025\u02e3\033\u02e4\046"
        + "\u02e2\001\001\000\010\023\u02df\034\u02dd\050\u02de\001\001"
        + "\000\004\050\u02e1\001\001\000\004\034\u02e0\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\004"
        + "\033\u02e6\001\001\000\002\001\001\000\004\034\u02e5\001"
        + "\001\000\002\001\001\000\002\001\001\000\004\033\u02eb"
        + "\001\001\000\004\050\u02ea\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\004\060\u02ef\001\001\000\004\061\u02f0\001"
        + "\001\000\002\001\001\000\002\001\001\000\004\060\u02f3"
        + "\001\001\000\004\061\u02f4\001\001\000\002\001\001\000"
        + "\002\001\001\000\004\070\u02f7\001\001\000\004\071\u02ff"
        + "\001\001\000\002\001\001\000\024\006\u02fa\007\102\014"
        + "\076\021\070\026\074\033\100\034\072\046\065\050\066"
        + "\001\001\000\002\001\001\000\002\001\001\000\024\006"
        + "\u02fd\007\102\014\076\021\070\026\074\033\100\034\072"
        + "\046\065\050\066\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\004\070\u0304\001\001\000\004"
        + "\070\u0302\001\001\000\004\071\u0303\001\001\000\002\001"
        + "\001\000\004\071\u0308\001\001\000\004\070\u0306\001\001"
        + "\000\004\071\u0307\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\010\005\u030d\062\u030b\065\u030e"
        + "\001\001\000\002\001\001\000\004\061\u031b\001\001\000"
        + "\002\001\001\000\002\001\001\000\004\062\u0310\001\001"
        + "\000\002\001\001\000\002\001\001\000\004\063\u031a\001"
        + "\001\000\002\001\001\000\002\001\001\000\002\001\001"
        + "\000\004\063\u0317\001\001\000\002\001\001\000\004\063"
        + "\u0319\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\002\001\001\000\002\001\001\000\004\060"
        + "\u031f\001\001\000\004\061\u0320\001\001\000\002\001\001"
        + "\000\002\001\001\000\002\001\001\000\004\005\u0325\001"
        + "\001\000\004\061\u031b\001\001\000\002\001\001\000\010"
        + "\004\u0329\062\u0327\066\u032a\001\001\000\002\001\001\000"
        + "\004\070\u032d\001\001\000\002\001\001\000\002\001\001"
        + "\000\004\062\u032c\001\001\000\002\001\001\000\004\071"
        + "\u033e\001\001\000\006\063\u031a\070\u033b\001\001\000\002"
        + "\001\001\000\002\001\001\000\006\063\u0319\070\u0332\001"
        + "\001\000\004\071\u0334\001\001\000\004\036\037\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\004\070\u0338\001\001\000\004\071\u0339\001\001\000\002"
        + "\001\001\000\002\001\001\000\004\071\u033c\001\001\000"
        + "\002\001\001\000\002\001\001\000\002\001\001\000\002"
        + "\001\001\000\004\004\u0342\001\001\000\004\070\u032d\001"
        + "\001\000\002\001\001\000\004\070\u033b\001\001\000\002"
        + "\001\001\000\004\070\u0332\001\001\000\020\004\u0348\005"
        + "\u034e\060\u02ef\062\u034d\065\u034b\066\u034a\067\u0349\001\001"
        + "\000\002\001\001\000\002\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\006\061\u031b\070\u032d"
        + "\001\001\000\002\001\001\000\002\001\001\000\006\004"
        + "\u0350\062\u0310\001\001\000\002\001\001\000\006\004\u0342"
        + "\005\u0325\001\001\000\006\061\u031b\070\u032d\001\001\000"
        + "\006\005\u0354\062\u032c\001\001\000\002\001\001\000\010"
        + "\004\u0356\005\u0357\067\u0358\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001\000\004\004\u0350\001\001"
        + "\000\004\005\u0354\001\001\000\002\001\001\000\002\001"
        + "\001\000\002\001\001\000\002\001\001\000\012\003\u0360"
        + "\004\012\005\011\062\007\001\001\000\002\001\001\000"
        + "\002\001\001\000\002\001\001"});

    /**
     * Access to <code>reduce_goto</code> table.
     */
    public short[][] reduce_table() {
        return _reduce_table;
    }

    /**
     * Instance of action encapsulation class.
     */
    protected CUP$parser_save$actions action_obj;

    /**
     * Action encapsulation object initializer.
     */
    protected void init_actions() {
        action_obj = new CUP$parser_save$actions(this);
    }

    /**
     * Invoke a user supplied parse action.
     */
    public java_cup.runtime.Symbol do_action(
            int act_num,
            java_cup.runtime.lr_parser parser,
            java.util.Stack stack,
            int top)
            throws java.lang.Exception {
        /* call code in generated class */
        return action_obj.CUP$parser_save$do_action(act_num, parser, stack, top);
    }

    /**
     * Indicates start state.
     */
    public int start_state() {
        return 0;
    }

    /**
     * Indicates start production.
     */
    public int start_production() {
        return 0;
    }

    /** <code>EOF</code> Symbol index.
     */
    public int EOF_sym() {
        return 0;
    }

    /** <code>error</code> Symbol index.
     */
    public int error_sym() {
        return 1;
    }

    public static ArrayList<planeta_neutral> neutrales;
    public static ArrayList<planeta_jugador> planetas;
    public static ArrayList<String> jugadores;

    public static String nombre_, due√±o_;
    public static int naves_, produccion_, rojo_, verde_, azul_, coordx_, coordy_;
    public static ArrayList<ErrorSintatico> errores;

    @Override
    public void syntax_error(Symbol s) {
        errores.add(new ErrorSintatico(s, "", false));
        System.out.println("Error R de sintaxis: " + s.value + " Linea " + (s.left + 1) + " columna " + (s.right + 1));
    }

    @Override
    public void unrecovered_syntax_error(Symbol s) {
        System.out.println("La Cadena:" + s.value + " en la Linea:" + (s.right + 1) + " ,Columna: " + s.left + "esta fuera de contexto.");
    }

    public static void IMPRIMIR(String ms) {
        System.out.println(ms);
    }

}

/**
 * Cup generated class to encapsulate user supplied action code.
 */
class CUP$parser_save$actions {

    private final parser_save parser;

    /**
     * Constructor
     */
    CUP$parser_save$actions(parser_save parser) {
        this.parser = parser;
    }

    /**
     * Method with the actual generated action code.
     */
    public final java_cup.runtime.Symbol CUP$parser_save$do_action(
            int CUP$parser_save$act_num,
            java_cup.runtime.lr_parser CUP$parser_save$parser,
            java.util.Stack CUP$parser_save$stack,
            int CUP$parser_save$top)
            throws java.lang.Exception {
        /* Symbol object for return from actions */
        java_cup.runtime.Symbol CUP$parser_save$result;

        /* select the action based on the action number */
        switch (CUP$parser_save$act_num) {
            /*. . . . . . . . . . . . . . . . . . . .*/
            case 209: // COMILLAS2 ::= cierraComilla 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS2", 29, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 208: // COMILLAS2 ::= comilla 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS2", 29, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 207: // COMILLAS1 ::= abreComilla 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS1", 28, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 206: // COMILLAS1 ::= comilla 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS1", 28, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 205: // DUE√ëO1 ::= error naves dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 204: // DUE√ëO1 ::= error coma naves dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 203: // DUE√ëO1 ::= error num coma naves dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 202: // DUE√ëO1 ::= error dosPuntos num coma naves dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 201: // DUE√ëO1 ::= error produccion dosPuntos num coma naves dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 200: // DUE√ëO1 ::= error num coma produccion dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 199: // DUE√ëO1 ::= error dosPuntos num coma produccion dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 198: // DUE√ëO1 ::= error naves dosPuntos num coma produccion dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 197: // DUE√ëO1 ::= produccion dosPuntos num coma naves dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 196: // DUE√ëO1 ::= naves dosPuntos num coma produccion dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                produccion_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1", 45, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 195: // DUE√ëO ::= error coma DUE√ëO1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO", 44, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 194: // DUE√ëO ::= error id COMILLAS2 coma DUE√ëO1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).value;
                due√±o_ = (String) e;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO", 44, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 193: // DUE√ëO ::= error COMILLAS1 id COMILLAS2 coma DUE√ëO1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).value;
                due√±o_ = (String) e;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO", 44, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 192: // DUE√ëO ::= error dosPuntos COMILLAS1 id COMILLAS2 coma DUE√ëO1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).value;
                due√±o_ = (String) e;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO", 44, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 191: // DUE√ëO ::= error due√±o dosPuntos COMILLAS1 id COMILLAS2 coma DUE√ëO1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).value;
                due√±o_ = (String) e;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO", 44, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 190: // DUE√ëO ::= due√±o dosPuntos COMILLAS1 id COMILLAS2 coma DUE√ëO1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)).value;
                due√±o_ = (String) e;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO", 44, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 189: // PRODUCCION1 ::= error num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                IMPRIMIR("error--------------XD->");

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 188: // PRODUCCION1 ::= error dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e);
                IMPRIMIR("error--------------XD->");

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 187: // PRODUCCION1 ::= error COMILLAS1 id COMILLAS2 coma dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e1);
                due√±o_ = (String) e2;
                IMPRIMIR("error--------------->");

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 186: // PRODUCCION1 ::= error dosPuntos COMILLAS1 id COMILLAS2 coma dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e1);
                due√±o_ = (String) e2;
                IMPRIMIR("error--------------->");

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 185: // PRODUCCION1 ::= error id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                due√±o_ = (String) e;
                IMPRIMIR("Error de due√±o" + e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 184: // PRODUCCION1 ::= error dosPuntos num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).value;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                naves_ = Integer.parseInt((String) e1);
                due√±o_ = (String) e2;
                IMPRIMIR("Error en declaracion de naves" + e1 + " " + e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 8)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 183: // PRODUCCION1 ::= error naves dosPuntos num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).value;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                naves_ = Integer.parseInt((String) e1);
                due√±o_ = (String) e2;
                IMPRIMIR("Error en declaracion de naves" + e1 + " " + e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 9)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 182: // PRODUCCION1 ::= due√±o dosPuntos COMILLAS1 id COMILLAS2 coma naves dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).value;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                naves_ = Integer.parseInt((String) e2);
                due√±o_ = (String) e1;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 8)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 181: // PRODUCCION1 ::= naves dosPuntos num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).value;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                naves_ = Integer.parseInt((String) e1);
                due√±o_ = (String) e2;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1", 43, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 8)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 180: // PRODUCCION ::= error coma PRODUCCION1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION", 42, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 179: // PRODUCCION ::= error num coma PRODUCCION1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                produccion_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION", 42, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 178: // PRODUCCION ::= error dosPuntos num coma PRODUCCION1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                produccion_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION", 42, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 177: // PRODUCCION ::= error produccion dosPuntos num coma PRODUCCION1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                produccion_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION", 42, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 176: // PRODUCCION ::= produccion dosPuntos num coma PRODUCCION1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                produccion_ = Integer.parseInt((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION", 42, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 175: // NAVES1 ::= error due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                due√±o_ = (String) e;
                System.out.println(e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 174: // NAVES1 ::= error dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                due√±o_ = (String) e;
                System.out.println("tira error" + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 173: // NAVES1 ::= error num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                produccion_ = Integer.parseInt((String) e);
                due√±o_ = (String) e1;

                System.out.println("tira error 2" + e1 + " " + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 172: // NAVES1 ::= error COMILLAS1 id COMILLAS2 coma produccion dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).value;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                produccion_ = Integer.parseInt((String) e);
                due√±o_ = (String) e1;

                System.out.println("tira error 3" + e1 + " " + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 171: // NAVES1 ::= error COMILLAS2 coma produccion dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                produccion_ = Integer.parseInt((String) e);
                System.out.println("tira error 4 " + e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 170: // NAVES1 ::= error produccion dosPuntos num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                produccion_ = Integer.parseInt((String) e);
                due√±o_ = (String) e1;
                System.out.println("error en produccion" + e + " " + e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 9)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 169: // NAVES1 ::= due√±o dosPuntos COMILLAS1 id COMILLAS2 coma produccion dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)).value;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                produccion_ = Integer.parseInt((String) e);
                due√±o_ = (String) e1;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 8)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 168: // NAVES1 ::= produccion dosPuntos num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                produccion_ = Integer.parseInt((String) e);
                due√±o_ = (String) e1;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1", 41, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 8)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 167: // NAVES ::= error num coma NAVES1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                System.out.println("naves" + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES", 40, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 166: // NAVES ::= error dosPuntos num coma NAVES1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                naves_ = Integer.parseInt((String) e);
                System.out.println("error en declaracion de las naves");

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES", 40, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 165: // NAVES ::= error naves dosPuntos num coma NAVES1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                naves_ = Integer.parseInt((String) e);
                System.out.println("error en declaracion de las naves");

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES", 40, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 164: // NAVES ::= naves dosPuntos num coma NAVES1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                naves_ = Integer.parseInt((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES", 40, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 163: // ATRI1 ::= DUE√ëO 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRI1", 39, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 162: // ATRI1 ::= PRODUCCION 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRI1", 39, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 161: // ATRI1 ::= NAVES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRI1", 39, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 160: // ATRIBUTOS ::= error cierraLlaves 
            {
                Object RESULT = null;
                System.out.println("existe un error antes de abrir llaves");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS", 38, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 159: // ATRIBUTOS ::= error ATRI1 cierraLlaves 
            {
                Object RESULT = null;
                System.out.println("existe un error antes de abrir llaves");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS", 38, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 158: // ATRIBUTOS ::= error abreLlaves ATRI1 cierraLlaves 
            {
                Object RESULT = null;
                System.out.println("existe un error antes de abrir llaves");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS", 38, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 157: // ATRIBUTOS ::= error dosPuntos abreLlaves ATRI1 cierraLlaves 
            {
                Object RESULT = null;
                System.out.println("existe error antes de los dos puntos");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS", 38, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 156: // ATRIBUTOS ::= error datos dosPuntos abreLlaves ATRI1 cierraLlaves 
            {
                Object RESULT = null;
                System.out.println("d");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS", 38, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 155: // ATRIBUTOS ::= datos dosPuntos abreLlaves ATRI1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS", 38, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 154: // POS11 ::= error dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                System.out.println("y: Error antes de la posicion " + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 153: // POS11 ::= error coma x dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 152: // POS11 ::= error num coma x dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e1);
                coordy_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 151: // POS11 ::= error dosPuntos num coma x dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e1);
                coordy_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 150: // POS11 ::= error y dosPuntos num coma x dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e1);
                coordy_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 149: // POS11 ::= error y dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordy_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 148: // POS11 ::= error coma y dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordy_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 147: // POS11 ::= error num coma y dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e);
                coordy_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 146: // POS11 ::= error dosPuntos num coma y dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e);
                coordy_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 145: // POS11 ::= error x dosPuntos num coma y dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e);
                coordy_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 144: // POS11 ::= y dosPuntos num coma x dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e1);
                coordy_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 143: // POS11 ::= x dosPuntos num coma y dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                coordx_ = Integer.parseInt((String) e);
                coordy_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11", 37, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 142: // POSICION ::= pos dosPuntos abreLlaves POS11 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POSICION", 36, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 141: // GREEN1 ::= error coma num 
            {
                Object RESULT = null;
                System.out.println("");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 140: // GREEN1 ::= error rojo dosPuntos num coma azul dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e);
                azul_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 139: // GREEN1 ::= error rojo dosPuntos num 
            {
                Object RESULT = null;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 138: // GREEN1 ::= error coma rojo dosPuntos num 
            {
                Object RESULT = null;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 137: // GREEN1 ::= error num coma rojo dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e2);
                rojo_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 136: // GREEN1 ::= error dosPuntos num coma rojo dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e2);
                rojo_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 135: // GREEN1 ::= error azul dosPuntos num coma rojo dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e2);
                rojo_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 134: // GREEN1 ::= azul dosPuntos num coma rojo dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e2);
                rojo_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 133: // GREEN1 ::= rojo dosPuntos num coma azul dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e);
                azul_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1", 35, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 132: // GREEN ::= error num coma GREEN1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                System.out.println("En la declaracion de color verde esta mal, verde=" + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN", 34, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 131: // GREEN ::= error dosPuntos num coma GREEN1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                verde_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN", 34, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 130: // GREEN ::= error verde dosPuntos num coma GREEN1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                verde_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN", 34, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 129: // GREEN ::= verde dosPuntos num coma GREEN1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                verde_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN", 34, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 128: // BLUE1 ::= error 
            {
                Object RESULT = null;
                System.out.println("Colores verde y rojo no agregados");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE1", 33, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 127: // BLUE1 ::= error verde dosPuntos num coma rojo dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e3);
                verde_ = Integer.parseInt((String) e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE1", 33, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 126: // BLUE1 ::= error rojo dosPuntos num coma verde dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e);
                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE1", 33, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 125: // BLUE1 ::= verde dosPuntos num coma rojo dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e3);
                verde_ = Integer.parseInt((String) e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE1", 33, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 124: // BLUE1 ::= rojo dosPuntos num coma verde dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                rojo_ = Integer.parseInt((String) e);
                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE1", 33, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 123: // BLUE ::= error coma BLUE1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE", 32, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 122: // BLUE ::= error num coma BLUE1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                azul_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE", 32, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 121: // BLUE ::= error dosPuntos num coma BLUE1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                azul_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE", 32, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 120: // BLUE ::= error azul dosPuntos num coma BLUE1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                azul_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE", 32, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 119: // BLUE ::= azul dosPuntos num coma BLUE1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;

                azul_ = Integer.parseInt((String) e);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE", 32, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 118: // RED1 ::= error verde dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 117: // RED1 ::= error coma verde dosPuntos num 
            {
                Object RESULT = null;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 116: // RED1 ::= error num coma verde dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e);
                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 115: // RED1 ::= error dosPuntos num coma verde dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e);
                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 114: // RED1 ::= error azul dosPuntos num coma verde dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e);
                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 113: // RED1 ::= error azul dosPuntos num 
            {
                Object RESULT = null;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 112: // RED1 ::= error coma azul dosPuntos num 
            {
                Object RESULT = null;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e3);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 111: // RED1 ::= error num coma azul dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e3);
                verde_ = Integer.parseInt((String) e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 110: // RED1 ::= error dosPuntos num coma azul dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e3);
                verde_ = Integer.parseInt((String) e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 109: // RED1 ::= error verde dosPuntos num coma azul dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e3);
                verde_ = Integer.parseInt((String) e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 7)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 108: // RED1 ::= verde dosPuntos num coma azul dosPuntos num 
            {
                Object RESULT = null;
                int e2left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int e2right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e2 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e3left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e3right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e3 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e3);
                verde_ = Integer.parseInt((String) e2);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 107: // RED1 ::= azul dosPuntos num coma verde dosPuntos num 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)).value;
                int e1left = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).left;
                int e1right = ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).right;
                Object e1 = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;

                azul_ = Integer.parseInt((String) e);
                verde_ = Integer.parseInt((String) e1);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1", 31, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 106: // RED ::= error num coma RED1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                System.out.println("Color " + e + "recuperado");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED", 30, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 105: // RED ::= error dosPuntos num coma RED1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                rojo_ = Integer.parseInt((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED", 30, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 104: // RED ::= error rojo dosPuntos num coma RED1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                rojo_ = Integer.parseInt((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED", 30, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 103: // RED ::= rojo dosPuntos num coma RED1 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                rojo_ = Integer.parseInt((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED", 30, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 102: // COLORES1 ::= GREEN 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES1", 27, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 101: // COLORES1 ::= BLUE 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES1", 27, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 100: // COLORES1 ::= RED 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES1", 27, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 99: // COLORES ::= error COLORES1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES", 26, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 98: // COLORES ::= error abreLlaves COLORES1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES", 26, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 97: // COLORES ::= error dosPuntos abreLlaves COLORES1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES", 26, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 96: // COLORES ::= error color dosPuntos abreLlaves COLORES1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES", 26, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 95: // COLORES ::= color dosPuntos abreLlaves COLORES1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES", 26, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 94: // NOMBRE ::= error COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;
                System.out.println("en nombre" + e);
                nombre_ = (String) e;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NOMBRE", 25, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 93: // NOMBRE ::= error dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                nombre_ = (String) e;
                System.out.println("en nombre" + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NOMBRE", 25, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 92: // NOMBRE ::= error nombre dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;

                nombre_ = (String) e;
                System.out.println("en nombre" + e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NOMBRE", 25, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 91: // NOMBRE ::= nombre dosPuntos COMILLAS1 id COMILLAS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;
                nombre_ = (String) e;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NOMBRE", 25, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 90: // ATRIBUTES4 ::= COLORES NOMBRE 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES4", 24, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 89: // ATRIBUTES4 ::= NOMBRE COLORES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES4", 24, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 88: // ATRIBUTES3 ::= POSICION NOMBRE 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES3", 23, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 87: // ATRIBUTES3 ::= NOMBRE POSICION 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES3", 23, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 86: // ATRIBUTES2 ::= POSICION COLORES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES2", 22, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 85: // ATRIBUTES2 ::= COLORES POSICION 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES2", 22, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 84: // ATRIBUTES1 ::= POSICION ATRIBUTES4 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES1", 21, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 83: // ATRIBUTES1 ::= COLORES ATRIBUTES3 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES1", 21, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 82: // ATRIBUTES1 ::= NOMBRE ATRIBUTES2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES1", 21, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 81: // ATRIBUTES ::= ATRIBUTOS ATRIBUTES1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES", 20, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 80: // POS4 ::= POSICION NOMBRE 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS4", 19, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 79: // POS4 ::= NOMBRE COLORES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS4", 19, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 78: // POS3 ::= ATRIBUTOS NOMBRE 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS3", 18, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 77: // POS3 ::= NOMBRE ATRIBUTOS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS3", 18, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 76: // POS2 ::= ATRIBUTOS COLORES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS2", 17, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 75: // POS2 ::= COLORES ATRIBUTOS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS2", 17, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 74: // POS1 ::= ATRIBUTOS POS4 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS1", 16, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 73: // POS1 ::= COLORES POS3 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS1", 16, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 72: // POS1 ::= NOMBRE POS2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS1", 16, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 71: // POS ::= POSICION POS1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS", 15, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 70: // COLORS4 ::= POSICION NOMBRE 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS4", 14, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 69: // COLORS4 ::= NOMBRE POSICION 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS4", 14, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 68: // COLORS3 ::= ATRIBUTOS NOMBRE 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS3", 13, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 67: // COLORS3 ::= NOMBRE ATRIBUTOS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS3", 13, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 66: // COLORS2 ::= ATRIBUTOS POSICION 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS2", 12, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 65: // COLORS2 ::= POSICION ATRIBUTOS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS2", 12, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 64: // COLORS1 ::= ATRIBUTOS COLORS4 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS1", 11, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 63: // COLORS1 ::= POSICION COLORS3 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS1", 11, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 62: // COLORS1 ::= NOMBRE COLORS2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS1", 11, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 61: // COLORS ::= COLORES COLORS1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS", 10, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 60: // NAME4 ::= POSICION coma COLORES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME4", 9, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 59: // NAME4 ::= COLORES coma POSICION 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME4", 9, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 58: // NAME3 ::= ATRIBUTOS coma COLORES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME3", 8, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 57: // NAME3 ::= COLORES coma ATRIBUTOS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME3", 8, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 56: // NAME2 ::= ATRIBUTOS coma POSICION 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME2", 7, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 55: // NAME2 ::= POSICION coma ATRIBUTOS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME2", 7, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 54: // NAME1 ::= ATRIBUTOS coma NAME4 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME1", 6, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 53: // NAME1 ::= POSICION coma NAME3 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME1", 6, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 52: // NAME1 ::= COLORES coma NAME2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME1", 6, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 51: // NAME ::= NOMBRE coma NAME1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME", 5, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 50: // DATOS ::= error cierraLlaves 
            {
                Object RESULT = null;
                System.out.println("EXP2");
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS", 4, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 49: // DATOS ::= ATRIBUTES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS", 4, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 48: // DATOS ::= POS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS", 4, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 47: // DATOS ::= COLORS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS", 4, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 46: // DATOS ::= NAME 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS", 4, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 45: // EXP ::= error coma EXPRESION EXP 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP", 47, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 44: // EXP ::= 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP", 47, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 43: // EXP ::= coma EXPRESION EXP 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP", 47, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 42: // EXPRESION ::= abreLlaves DATOS cierraLlaves 
            {
                Object RESULT = null;

                planeta_neutral t = new planeta_neutral(naves_, 0, nombre_, false, false, produccion_);
                t.setColor(new Color(rojo_, verde_, azul_));
                t.setX_(coordx_);
                t.setY_(coordy_);
                t.setDue√±o(due√±o_);
                neutrales.add(t);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXPRESION", 46, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 41: // EXP2 ::= error EXPRESION1 EXP2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP2", 55, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 40: // EXP2 ::= error coma EXPRESION1 EXP2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP2", 55, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 39: // EXP2 ::= 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP2", 55, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 38: // EXP2 ::= coma EXPRESION1 EXP2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP2", 55, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 37: // EXPRESION1 ::= error abreLlaves DATOS cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXPRESION1", 54, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 36: // EXPRESION1 ::= abreLlaves DATOS cierraLlaves 
            {
                Object RESULT = null;

                planeta_jugador t = new planeta_jugador(naves_, 0, nombre_, false, false, produccion_);
                t.setColor(new Color(rojo_, verde_, azul_));
                t.setX_(coordx_);
                t.setY_(coordy_);
                t.setDue√±o(due√±o_);
                planetas.add(t);

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXPRESION1", 54, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 35: // NEUTRALES ::= error EXP cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NEUTRALES", 3, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 34: // NEUTRALES ::= error neutrales dosPuntos abreCor EXPRESION EXP cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NEUTRALES", 3, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 33: // NEUTRALES ::= neutrales dosPuntos abreCor EXPRESION EXP cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NEUTRALES", 3, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 32: // PLANETAS ::= error EXPRESION1 EXP2 cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLANETAS", 2, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 31: // PLANETAS ::= error abreCor EXPRESION1 EXP2 cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLANETAS", 2, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 30: // PLANETAS ::= error dosPuntos abreCor EXPRESION1 EXP2 cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLANETAS", 2, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 29: // PLANETAS ::= error planetas dosPuntos abreCor EXPRESION1 EXP2 cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLANETAS", 2, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 28: // PLANETAS ::= planetas dosPuntos abreCor EXPRESION1 EXP2 cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLANETAS", 2, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 27: // GAME4 ::= NEUTRALES coma PLANETAS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME4", 53, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 26: // GAME4 ::= PLANETAS coma NEUTRALES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME4", 53, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 25: // GAME3 ::= PLAYERS coma PLANETAS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME3", 52, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 24: // GAME3 ::= PLANETAS coma PLAYERS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME3", 52, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 23: // GAME2 ::= PLAYERS coma NEUTRALES 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME2", 51, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 22: // GAME2 ::= NEUTRALES coma PLAYERS 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME2", 51, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 21: // GAME1 ::= error coma GAME4 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1", 1, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 20: // GAME1 ::= error coma GAME3 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1", 1, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 19: // GAME1 ::= error coma GAME2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1", 1, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 18: // GAME1 ::= PLAYERS coma GAME4 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1", 1, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 17: // GAME1 ::= NEUTRALES coma GAME3 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1", 1, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 16: // GAME1 ::= PLANETAS coma GAME2 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1", 1, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 15: // PLAYERS2 ::= cierraCor 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS2", 50, ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 14: // PLAYERS2 ::= coma PLAYERS1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS2", 50, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 13: // PLAYERS1 ::= error id COMILLAS2 PLAYERS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                jugadores.add((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS1", 49, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 12: // PLAYERS1 ::= error COMILLAS1 id COMILLAS2 PLAYERS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                jugadores.add((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS1", 49, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 11: // PLAYERS1 ::= error dosPuntos COMILLAS1 id COMILLAS2 PLAYERS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                jugadores.add((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS1", 49, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 10: // PLAYERS1 ::= error nombre dosPuntos COMILLAS1 id COMILLAS2 PLAYERS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                jugadores.add((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS1", 49, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 6)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 9: // PLAYERS1 ::= nombre dosPuntos COMILLAS1 id COMILLAS2 PLAYERS2 
            {
                Object RESULT = null;
                int eleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).left;
                int eright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).right;
                Object e = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)).value;
                jugadores.add((String) e);
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS1", 49, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 5)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 8: // PLAYERS ::= error abreCor PLAYERS1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS", 48, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 7: // PLAYERS ::= error dosPuntos abreCor PLAYERS1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS", 48, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 6: // PLAYERS ::= error jugador dosPuntos abreCor PLAYERS1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS", 48, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 4)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 5: // PLAYERS ::= jugador dosPuntos abreCor PLAYERS1 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS", 48, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 4: // GAME ::= error cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME", 0, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 3: // GAME ::= error GAME1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME", 0, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 2: // GAME ::= error abreLlaves GAME1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME", 0, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 3)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 1: // GAME ::= abreLlaves GAME1 cierraLlaves 
            {
                Object RESULT = null;

                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME", 0, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 2)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            return CUP$parser_save$result;

            /*. . . . . . . . . . . . . . . . . . . .*/
            case 0: // $START ::= GAME EOF 
            {
                Object RESULT = null;
                int start_valleft = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).left;
                int start_valright = ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).right;
                Object start_val = (Object) ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)).value;
                RESULT = start_val;
                CUP$parser_save$result = parser.getSymbolFactory().newSymbol("$START", 0, ((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top - 1)), ((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()), RESULT);
            }
            /* ACCEPT */
            CUP$parser_save$parser.done_parsing();
            return CUP$parser_save$result;

            /* . . . . . .*/
            default:
                throw new Exception(
                        "Invalid action number found in internal parse table");

        }
    }
}

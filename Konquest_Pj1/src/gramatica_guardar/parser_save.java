
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Fri Mar 20 21:05:55 CST 2020
//----------------------------------------------------

package gramatica_guardar;

  import static gramatica_guardar.parser_save.coordx_;
import static gramatica_guardar.parser_save.coordy_;
import static gramatica_guardar.parser_save.rojo_;
import static gramatica_guardar.parser_save.verde_;
import static gramatica_guardar.parser_save.azul_;
import static gramatica_guardar.parser_save.due√±o_;
import static gramatica_guardar.parser_save.jugadores;
import static gramatica_guardar.parser_save.naves_;
import static gramatica_guardar.parser_save.neutrales;
import static gramatica_guardar.parser_save.nombre_;
import static gramatica_guardar.parser_save.planetas;
import static gramatica_guardar.parser_save.produccion_;
import java.awt.Color;
import java.util.ArrayList;
import java_cup.runtime.Symbol;
import planetas.planeta_jugador;
import planetas_neutral.planeta_neutral;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Fri Mar 20 21:05:55 CST 2020
  */
public class parser_save extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser_save() {super();}

  /** Constructor which sets the default scanner. */
  public parser_save(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser_save(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\145\000\002\002\004\000\002\002\005\000\002\062" +
    "\006\000\002\063\010\000\002\064\004\000\002\064\003" +
    "\000\002\003\005\000\002\003\005\000\002\003\005\000" +
    "\002\065\005\000\002\065\005\000\002\066\005\000\002" +
    "\066\005\000\002\067\005\000\002\067\005\000\002\004" +
    "\010\000\002\005\010\000\002\070\005\000\002\071\005" +
    "\000\002\071\002\000\002\060\005\000\002\061\005\000" +
    "\002\061\002\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\006\003\000\002\007\005\000\002\010" +
    "\005\000\002\010\005\000\002\010\005\000\002\011\005" +
    "\000\002\011\005\000\002\012\005\000\002\012\005\000" +
    "\002\013\005\000\002\013\005\000\002\014\004\000\002" +
    "\015\004\000\002\015\004\000\002\015\004\000\002\016" +
    "\004\000\002\016\004\000\002\017\004\000\002\017\004" +
    "\000\002\020\004\000\002\020\004\000\002\021\004\000" +
    "\002\022\004\000\002\022\004\000\002\022\004\000\002" +
    "\023\004\000\002\023\004\000\002\024\004\000\002\024" +
    "\004\000\002\025\004\000\002\025\004\000\002\026\004" +
    "\000\002\027\004\000\002\027\004\000\002\027\004\000" +
    "\002\030\004\000\002\030\004\000\002\031\004\000\002" +
    "\031\004\000\002\032\004\000\002\032\004\000\002\033" +
    "\007\000\002\034\007\000\002\035\003\000\002\035\003" +
    "\000\002\035\003\000\002\040\007\000\002\041\011\000" +
    "\002\041\011\000\002\042\007\000\002\043\011\000\002" +
    "\043\011\000\002\044\007\000\002\045\011\000\002\045" +
    "\011\000\002\046\007\000\002\047\011\000\002\047\011" +
    "\000\002\050\007\000\002\051\003\000\002\051\003\000" +
    "\002\051\003\000\002\052\007\000\002\053\013\000\002" +
    "\053\013\000\002\054\007\000\002\055\013\000\002\055" +
    "\013\000\002\056\011\000\002\057\011\000\002\057\011" +
    "\000\002\036\003\000\002\036\003\000\002\037\003\000" +
    "\002\037\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u014c\000\004\011\005\001\002\000\004\002\u014e\001" +
    "\002\000\010\004\013\005\012\006\014\001\002\000\004" +
    "\012\u014d\001\002\000\004\015\u0145\001\002\000\004\015" +
    "\u013d\001\002\000\004\015\u0135\001\002\000\004\022\u012a" +
    "\001\002\000\004\022\035\001\002\000\004\022\015\001" +
    "\002\000\004\007\016\001\002\000\004\031\020\001\002" +
    "\000\006\012\uffff\015\uffff\001\002\000\004\022\021\001" +
    "\002\000\006\032\024\033\023\001\002\000\004\036\025" +
    "\001\002\000\004\036\uff9f\001\002\000\004\036\uffa0\001" +
    "\002\000\006\032\027\034\026\001\002\000\016\010\uff9d" +
    "\012\uff9d\015\uff9d\016\uff9d\026\uff9d\042\uff9d\001\002\000" +
    "\016\010\uff9e\012\uff9e\015\uff9e\016\uff9e\026\uff9e\042\uff9e" +
    "\001\002\000\006\010\031\015\033\001\002\000\006\012" +
    "\ufffc\015\ufffc\001\002\000\006\012\ufffe\015\ufffe\001\002" +
    "\000\004\031\020\001\002\000\006\012\ufffd\015\ufffd\001" +
    "\002\000\004\007\036\001\002\000\004\011\040\001\002" +
    "\000\006\010\uffeb\015\u0126\001\002\000\012\016\045\026" +
    "\051\031\054\042\047\001\002\000\010\016\045\031\054" +
    "\042\047\001\002\000\010\016\045\026\051\031\054\001" +
    "\002\000\004\012\376\001\002\000\004\012\uffe8\001\002" +
    "\000\004\022\276\001\002\000\010\026\051\031\054\042" +
    "\047\001\002\000\004\022\141\001\002\000\004\012\uffe7" +
    "\001\002\000\004\022\117\001\002\000\004\012\uffe9\001" +
    "\002\000\004\015\062\001\002\000\004\022\056\001\002" +
    "\000\004\012\uffea\001\002\000\006\032\024\033\023\001" +
    "\002\000\004\036\060\001\002\000\006\032\027\034\026" +
    "\001\002\000\014\012\uffbe\015\uffbe\016\uffbe\026\uffbe\042" +
    "\uffbe\001\002\000\010\016\045\026\051\042\047\001\002" +
    "\000\004\015\107\001\002\000\004\015\077\001\002\000" +
    "\004\015\067\001\002\000\004\012\uffe6\001\002\000\006" +
    "\016\045\026\051\001\002\000\004\015\075\001\002\000" +
    "\004\015\073\001\002\000\004\012\uffe3\001\002\000\004" +
    "\016\045\001\002\000\004\012\uffdd\001\002\000\004\026" +
    "\051\001\002\000\004\012\uffde\001\002\000\006\016\045" +
    "\042\047\001\002\000\004\015\105\001\002\000\004\015" +
    "\103\001\002\000\004\012\uffe4\001\002\000\004\016\045" +
    "\001\002\000\004\012\uffdf\001\002\000\004\042\047\001" +
    "\002\000\004\012\uffe0\001\002\000\006\026\051\042\047" +
    "\001\002\000\004\015\115\001\002\000\004\015\113\001" +
    "\002\000\004\012\uffe5\001\002\000\004\026\051\001\002" +
    "\000\004\012\uffe1\001\002\000\004\042\047\001\002\000" +
    "\004\012\uffe2\001\002\000\004\011\120\001\002\000\006" +
    "\027\121\030\123\001\002\000\004\022\133\001\002\000" +
    "\004\012\132\001\002\000\004\022\124\001\002\000\004" +
    "\035\125\001\002\000\004\015\126\001\002\000\004\027" +
    "\127\001\002\000\004\022\130\001\002\000\004\035\131" +
    "\001\002\000\004\012\uffae\001\002\000\014\012\uffb0\015" +
    "\uffb0\016\uffb0\031\uffb0\042\uffb0\001\002\000\004\035\134" +
    "\001\002\000\004\015\135\001\002\000\004\030\136\001" +
    "\002\000\004\022\137\001\002\000\004\035\140\001\002" +
    "\000\004\012\uffaf\001\002\000\004\011\142\001\002\000" +
    "\010\023\144\024\147\025\150\001\002\000\004\012\uffab" +
    "\001\002\000\004\022\225\001\002\000\004\012\224\001" +
    "\002\000\004\012\uffac\001\002\000\004\022\176\001\002" +
    "\000\004\022\152\001\002\000\004\012\uffaa\001\002\000" +
    "\006\032\024\033\023\001\002\000\004\036\154\001\002" +
    "\000\006\032\027\034\026\001\002\000\004\015\156\001" +
    "\002\000\006\023\160\024\161\001\002\000\004\012\uffa3" +
    "\001\002\000\004\022\170\001\002\000\004\022\162\001" +
    "\002\000\004\035\163\001\002\000\004\015\164\001\002" +
    "\000\004\023\165\001\002\000\004\022\166\001\002\000" +
    "\004\035\167\001\002\000\004\012\uffa1\001\002\000\004" +
    "\035\171\001\002\000\004\015\172\001\002\000\004\024" +
    "\173\001\002\000\004\022\174\001\002\000\004\035\175" +
    "\001\002\000\004\012\uffa2\001\002\000\004\035\177\001" +
    "\002\000\004\015\200\001\002\000\006\023\202\025\203" +
    "\001\002\000\004\012\uffa6\001\002\000\004\022\214\001" +
    "\002\000\004\022\204\001\002\000\006\032\024\033\023" +
    "\001\002\000\004\036\206\001\002\000\006\032\027\034" +
    "\026\001\002\000\004\015\210\001\002\000\004\023\211" +
    "\001\002\000\004\022\212\001\002\000\004\035\213\001" +
    "\002\000\004\012\uffa4\001\002\000\004\035\215\001\002" +
    "\000\004\015\216\001\002\000\004\025\217\001\002\000" +
    "\004\022\220\001\002\000\006\032\024\033\023\001\002" +
    "\000\004\036\222\001\002\000\006\032\027\034\026\001" +
    "\002\000\004\012\uffa5\001\002\000\014\012\uffad\015\uffad" +
    "\016\uffad\026\uffad\031\uffad\001\002\000\004\035\226\001" +
    "\002\000\004\015\227\001\002\000\006\024\231\025\232" +
    "\001\002\000\004\012\uffa9\001\002\000\004\022\243\001" +
    "\002\000\004\022\233\001\002\000\006\032\024\033\023" +
    "\001\002\000\004\036\235\001\002\000\006\032\027\034" +
    "\026\001\002\000\004\015\237\001\002\000\004\024\240" +
    "\001\002\000\004\022\241\001\002\000\004\035\242\001" +
    "\002\000\004\012\uffa7\001\002\000\004\035\244\001\002" +
    "\000\004\015\245\001\002\000\004\025\246\001\002\000" +
    "\004\022\247\001\002\000\006\032\024\033\023\001\002" +
    "\000\004\036\251\001\002\000\006\032\027\034\026\001" +
    "\002\000\004\012\uffa8\001\002\000\006\031\054\042\047" +
    "\001\002\000\006\026\051\031\054\001\002\000\004\012" +
    "\uffdc\001\002\000\006\026\051\042\047\001\002\000\004" +
    "\042\047\001\002\000\004\026\051\001\002\000\004\012" +
    "\uffdb\001\002\000\004\012\uffd7\001\002\000\004\012\uffd8" +
    "\001\002\000\004\031\054\001\002\000\004\012\uffd9\001" +
    "\002\000\004\026\051\001\002\000\004\012\uffd4\001\002" +
    "\000\004\012\uffd3\001\002\000\004\012\uffda\001\002\000" +
    "\004\031\054\001\002\000\004\042\047\001\002\000\004" +
    "\012\uffd6\001\002\000\004\012\uffd5\001\002\000\004\011" +
    "\277\001\002\000\010\017\305\020\304\021\300\001\002" +
    "\000\004\022\354\001\002\000\004\012\353\001\002\000" +
    "\004\012\uffbc\001\002\000\004\012\uffbb\001\002\000\004" +
    "\022\331\001\002\000\004\022\307\001\002\000\004\012" +
    "\uffba\001\002\000\004\035\310\001\002\000\004\015\311" +
    "\001\002\000\006\020\314\021\312\001\002\000\004\022" +
    "\323\001\002\000\004\012\uffb9\001\002\000\004\022\315" +
    "\001\002\000\004\035\316\001\002\000\004\015\317\001" +
    "\002\000\004\021\320\001\002\000\004\022\321\001\002" +
    "\000\004\035\322\001\002\000\004\012\uffb8\001\002\000" +
    "\004\035\324\001\002\000\004\015\325\001\002\000\004" +
    "\020\326\001\002\000\004\022\327\001\002\000\004\035" +
    "\330\001\002\000\004\012\uffb7\001\002\000\004\035\332" +
    "\001\002\000\004\015\333\001\002\000\006\017\336\021" +
    "\334\001\002\000\004\022\345\001\002\000\004\012\uffb6" +
    "\001\002\000\004\022\337\001\002\000\004\035\340\001" +
    "\002\000\004\015\341\001\002\000\004\021\342\001\002" +
    "\000\004\022\343\001\002\000\004\035\344\001\002\000" +
    "\004\012\uffb5\001\002\000\004\035\346\001\002\000\004" +
    "\015\347\001\002\000\004\017\350\001\002\000\004\022" +
    "\351\001\002\000\004\035\352\001\002\000\004\012\uffb4" +
    "\001\002\000\014\012\uffbd\015\uffbd\026\uffbd\031\uffbd\042" +
    "\uffbd\001\002\000\004\035\355\001\002\000\004\015\356" +
    "\001\002\000\006\017\361\020\360\001\002\000\004\012" +
    "\uffb3\001\002\000\004\022\370\001\002\000\004\022\362" +
    "\001\002\000\004\035\363\001\002\000\004\015\364\001" +
    "\002\000\004\020\365\001\002\000\004\022\366\001\002" +
    "\000\004\035\367\001\002\000\004\012\uffb2\001\002\000" +
    "\004\035\371\001\002\000\004\015\372\001\002\000\004" +
    "\017\373\001\002\000\004\022\374\001\002\000\004\035" +
    "\375\001\002\000\004\012\uffb1\001\002\000\006\010\uffed" +
    "\015\uffed\001\002\000\006\026\051\031\054\001\002\000" +
    "\006\016\045\031\054\001\002\000\004\012\uffc8\001\002" +
    "\000\006\016\045\026\051\001\002\000\004\026\051\001" +
    "\002\000\004\016\045\001\002\000\004\012\uffc7\001\002" +
    "\000\004\012\uffc3\001\002\000\004\012\uffc4\001\002\000" +
    "\004\031\054\001\002\000\004\012\uffc5\001\002\000\004" +
    "\016\045\001\002\000\004\012\uffc0\001\002\000\004\012" +
    "\uffbf\001\002\000\004\031\054\001\002\000\004\012\uffc6" +
    "\001\002\000\004\026\051\001\002\000\004\012\uffc2\001" +
    "\002\000\004\012\uffc1\001\002\000\004\012\uffd2\001\002" +
    "\000\006\031\054\042\047\001\002\000\006\026\051\031" +
    "\054\001\002\000\006\016\045\042\047\001\002\000\004" +
    "\042\047\001\002\000\004\016\045\001\002\000\004\012" +
    "\uffd1\001\002\000\004\012\uffcd\001\002\000\004\012\uffce" +
    "\001\002\000\004\031\054\001\002\000\004\016\045\001" +
    "\002\000\004\012\uffcf\001\002\000\004\012\uffca\001\002" +
    "\000\004\012\uffc9\001\002\000\004\031\054\001\002\000" +
    "\004\042\047\001\002\000\004\012\uffd0\001\002\000\004" +
    "\012\uffcc\001\002\000\004\012\uffcb\001\002\000\004\010" +
    "\u0129\001\002\000\004\011\040\001\002\000\006\010\uffeb" +
    "\015\u0126\001\002\000\004\010\uffec\001\002\000\006\012" +
    "\ufff1\015\ufff1\001\002\000\004\007\u012b\001\002\000\004" +
    "\011\u012d\001\002\000\006\010\uffee\015\u0131\001\002\000" +
    "\012\016\045\026\051\031\054\042\047\001\002\000\004" +
    "\012\u012f\001\002\000\006\010\ufff0\015\ufff0\001\002\000" +
    "\004\010\u0134\001\002\000\004\011\u012d\001\002\000\006" +
    "\010\uffee\015\u0131\001\002\000\004\010\uffef\001\002\000" +
    "\006\012\ufff2\015\ufff2\001\002\000\006\005\012\006\014" +
    "\001\002\000\004\015\u013b\001\002\000\004\015\u0139\001" +
    "\002\000\004\012\ufffa\001\002\000\004\006\014\001\002" +
    "\000\004\012\ufff6\001\002\000\004\005\012\001\002\000" +
    "\004\012\ufff5\001\002\000\006\004\013\006\014\001\002" +
    "\000\004\015\u0143\001\002\000\004\015\u0141\001\002\000" +
    "\004\012\ufffb\001\002\000\004\006\014\001\002\000\004" +
    "\012\ufff8\001\002\000\004\004\013\001\002\000\004\012" +
    "\ufff7\001\002\000\006\004\013\005\012\001\002\000\004" +
    "\015\u014b\001\002\000\004\015\u0149\001\002\000\004\012" +
    "\ufff9\001\002\000\004\004\013\001\002\000\004\012\ufff4" +
    "\001\002\000\004\005\012\001\002\000\004\012\ufff3\001" +
    "\002\000\004\002\000\001\002\000\004\002\001\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u014c\000\004\002\003\001\001\000\002\001\001\000" +
    "\012\003\005\004\007\005\010\062\006\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\063\016\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\036\021\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\037" +
    "\027\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\064\031\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\063\033\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\060\036\001\001\000\004\061\u0124\001\001\000" +
    "\024\006\042\007\054\014\051\021\043\026\047\033\052" +
    "\034\045\046\040\050\041\001\001\000\012\022\u0111\033" +
    "\u0114\034\u0112\050\u0113\001\001\000\012\027\u0100\033\u0101" +
    "\034\376\046\377\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\015\254\033\255\046\252" +
    "\050\253\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\036\056\001\001\000" +
    "\002\001\001\000\004\037\060\001\001\000\002\001\001" +
    "\000\012\010\065\034\062\046\063\050\064\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\013\071\034\067\046\070\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\073\001\001\000\002\001\001\000\004\046\075\001" +
    "\001\000\002\001\001\000\010\012\101\034\077\050\100" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\103\001\001\000\002\001\001\000\004" +
    "\050\105\001\001\000\002\001\001\000\010\011\111\046" +
    "\107\050\110\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\113\001\001\000\002\001" +
    "\001\000\004\050\115\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\047\121\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\051\144\052\145\054\142\056\150\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\036\152\001\001\000\002\001\001\000\004\037\154" +
    "\001\001\000\002\001\001\000\004\057\156\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\055\200\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\036\204\001\001" +
    "\000\002\001\001\000\004\037\206\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\036\220\001\001" +
    "\000\002\001\001\000\004\037\222\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\053\227\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\036\233\001\001\000\002" +
    "\001\001\000\004\037\235\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\036\247\001\001\000\002" +
    "\001\001\000\004\037\251\001\001\000\002\001\001\000" +
    "\010\017\270\033\272\050\271\001\001\000\010\020\264" +
    "\033\265\046\263\001\001\000\002\001\001\000\010\016" +
    "\260\046\256\050\257\001\001\000\004\050\262\001\001" +
    "\000\004\046\261\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\033\267\001\001\000\002" +
    "\001\001\000\004\046\266\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\033\274\001\001" +
    "\000\004\050\273\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\035\300\040\301\042\302" +
    "\044\305\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\041\312\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\043" +
    "\334\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\045" +
    "\356\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\031\u010d\033\u010e\046\u010c\001\001\000" +
    "\010\032\u0108\033\u0109\034\u0107\001\001\000\002\001\001" +
    "\000\010\030\u0104\034\u0102\046\u0103\001\001\000\004\046" +
    "\u0106\001\001\000\004\034\u0105\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\033\u010b\001" +
    "\001\000\002\001\001\000\004\034\u010a\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\033\u0110\001\001\000" +
    "\002\001\001\000\004\046\u010f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\024\u0121\033" +
    "\u0120\050\u011f\001\001\000\010\025\u011c\033\u011b\046\u011a" +
    "\001\001\000\010\023\u0117\034\u0115\050\u0116\001\001\000" +
    "\004\050\u0119\001\001\000\004\034\u0118\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\u011e\001\001\000\004\034\u011d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\033\u0123\001" +
    "\001\000\004\050\u0122\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\060" +
    "\u0126\001\001\000\004\061\u0127\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\070\u012b\001" +
    "\001\000\004\071\u012f\001\001\000\024\006\u012d\007\054" +
    "\014\051\021\043\026\047\033\052\034\045\046\040\050" +
    "\041\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\070\u0131\001\001\000\004\071\u0132\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\004\u0136" +
    "\062\u0135\066\u0137\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\062\u0139\001\001\000\002" +
    "\001\001\000\004\004\u013b\001\001\000\002\001\001\000" +
    "\010\005\u013e\062\u013d\065\u013f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\062\u0141\001" +
    "\001\000\002\001\001\000\004\005\u0143\001\001\000\002" +
    "\001\001\000\010\004\u0146\005\u0145\067\u0147\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\u0149\001\001\000\002\001\001\000\004\004\u014b\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser_save$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser_save$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser_save$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



 
    public static ArrayList<planeta_neutral> neutrales;
    public static ArrayList<planeta_jugador> planetas;
    public static ArrayList<String> jugadores;

    public static String nombre_,due√±o_;
    public static int naves_,produccion_,rojo_,verde_,azul_,coordx_,coordy_;
   public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }
  @Override
    public void unrecovered_syntax_error(Symbol s){
    System.out.println("La Cadena:" +s.value+" en la Linea:"+(s.right+1) +" ,Columna: "+s.left+"esta fuera de contexto." );
 }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser_save$actions {
  private final parser_save parser;

  /** Constructor */
  CUP$parser_save$actions(parser_save parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser_save$do_action(
    int                        CUP$parser_save$act_num,
    java_cup.runtime.lr_parser CUP$parser_save$parser,
    java.util.Stack            CUP$parser_save$stack,
    int                        CUP$parser_save$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser_save$result;

      /* select the action based on the action number */
      switch (CUP$parser_save$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // COMILLAS2 ::= cierraComilla 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS2",29, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // COMILLAS2 ::= comilla 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS2",29, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // COMILLAS1 ::= abreComilla 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS1",28, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // COMILLAS1 ::= comilla 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COMILLAS1",28, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // DUE√ëO1 ::= produccion dosPuntos num coma naves dosPuntos num 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
naves_=Integer.parseInt((String)e);
produccion_=Integer.parseInt((String)e1);

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1",45, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // DUE√ëO1 ::= naves dosPuntos num coma produccion dosPuntos num 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
naves_=Integer.parseInt((String)e);
produccion_=Integer.parseInt((String)e1);

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO1",45, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // DUE√ëO ::= due√±o dosPuntos COMILLAS1 id COMILLAS2 coma DUE√ëO1 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-3)).value;
		 due√±o_=(String)e;
              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DUE√ëO",44, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // PRODUCCION1 ::= due√±o dosPuntos COMILLAS1 id COMILLAS2 coma naves dosPuntos num 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
naves_=Integer.parseInt((String)e2);
due√±o_=(String)e1;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1",43, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-8)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // PRODUCCION1 ::= naves dosPuntos num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).value;
		
naves_=Integer.parseInt((String)e1);
due√±o_=(String)e2;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION1",43, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-8)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // PRODUCCION ::= produccion dosPuntos num coma PRODUCCION1 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).value;
		 produccion_=Integer.parseInt((String)e);
              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PRODUCCION",42, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // NAVES1 ::= due√±o dosPuntos COMILLAS1 id COMILLAS2 coma produccion dosPuntos num 
            {
              Object RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
produccion_=Integer.parseInt((String)e);
due√±o_=(String)e1;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1",41, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-8)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // NAVES1 ::= produccion dosPuntos num coma due√±o dosPuntos COMILLAS1 id COMILLAS2 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).value;
		 
produccion_=Integer.parseInt((String)e);
due√±o_=(String)e1;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES1",41, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-8)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // NAVES ::= naves dosPuntos num coma NAVES1 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).value;
		 naves_=Integer.parseInt((String)e);
              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAVES",40, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ATRI1 ::= DUE√ëO 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRI1",39, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ATRI1 ::= PRODUCCION 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRI1",39, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ATRI1 ::= NAVES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRI1",39, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ATRIBUTOS ::= datos dosPuntos abreLlaves ATRI1 cierraLlaves 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",38, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // POS11 ::= y dosPuntos num coma x dosPuntos num 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
coordx_=Integer.parseInt((String)e1);
coordy_=Integer.parseInt((String)e);

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11",37, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // POS11 ::= x dosPuntos num coma y dosPuntos num 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
coordx_=Integer.parseInt((String)e);
coordy_=Integer.parseInt((String)e1);

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS11",37, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // POSICION ::= pos dosPuntos abreLlaves POS11 cierraLlaves 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POSICION",36, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // GREEN1 ::= azul dosPuntos num coma rojo dosPuntos num 
            {
              Object RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e3 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
 azul_= Integer.parseInt((String)e2); 
 rojo_= Integer.parseInt((String)e3); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1",35, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // GREEN1 ::= rojo dosPuntos num coma azul dosPuntos num 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
 rojo_= Integer.parseInt((String)e); 
 azul_= Integer.parseInt((String)e1); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN1",35, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // GREEN ::= verde dosPuntos num coma GREEN1 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).value;
		
 verde_= Integer.parseInt((String)e); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GREEN",34, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // BLUE1 ::= verde dosPuntos num coma rojo dosPuntos num 
            {
              Object RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e3 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
 rojo_= Integer.parseInt((String)e3); 
 verde_= Integer.parseInt((String)e2); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE1",33, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // BLUE1 ::= rojo dosPuntos num coma verde dosPuntos num 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
 rojo_= Integer.parseInt((String)e); 
 verde_= Integer.parseInt((String)e1); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE1",33, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // BLUE ::= azul dosPuntos num coma BLUE1 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).value;
		
 azul_= Integer.parseInt((String)e); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("BLUE",32, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // RED1 ::= verde dosPuntos num coma azul dosPuntos num 
            {
              Object RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e3 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
 azul_= Integer.parseInt((String)e3); 
 verde_= Integer.parseInt((String)e2); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1",31, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // RED1 ::= azul dosPuntos num coma verde dosPuntos num 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.peek()).value;
		
 azul_= Integer.parseInt((String)e); 
 verde_= Integer.parseInt((String)e1); 

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED1",31, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-6)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // RED ::= rojo dosPuntos num coma RED1 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).value;
		 rojo_= Integer.parseInt((String)e); 
              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("RED",30, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // COLORES1 ::= GREEN 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES1",27, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // COLORES1 ::= BLUE 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES1",27, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // COLORES1 ::= RED 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES1",27, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // COLORES ::= color dosPuntos abreLlaves COLORES1 cierraLlaves 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORES",26, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // NOMBRE ::= nombre dosPuntos COMILLAS1 id COMILLAS2 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).value;
		 nombre_=(String)e;
              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NOMBRE",25, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-4)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ATRIBUTES4 ::= COLORES NOMBRE 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES4",24, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ATRIBUTES4 ::= NOMBRE COLORES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES4",24, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ATRIBUTES3 ::= POSICION NOMBRE 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES3",23, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ATRIBUTES3 ::= NOMBRE POSICION 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES3",23, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ATRIBUTES2 ::= POSICION COLORES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES2",22, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ATRIBUTES2 ::= COLORES POSICION 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES2",22, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ATRIBUTES1 ::= POSICION ATRIBUTES4 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES1",21, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // ATRIBUTES1 ::= COLORES ATRIBUTES3 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES1",21, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // ATRIBUTES1 ::= NOMBRE ATRIBUTES2 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES1",21, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // ATRIBUTES ::= ATRIBUTOS ATRIBUTES1 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("ATRIBUTES",20, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // POS4 ::= POSICION NOMBRE 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS4",19, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // POS4 ::= NOMBRE COLORES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS4",19, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // POS3 ::= ATRIBUTOS NOMBRE 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS3",18, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // POS3 ::= NOMBRE ATRIBUTOS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS3",18, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // POS2 ::= ATRIBUTOS COLORES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS2",17, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // POS2 ::= COLORES ATRIBUTOS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS2",17, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // POS1 ::= ATRIBUTOS POS4 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS1",16, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // POS1 ::= COLORES POS3 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS1",16, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // POS1 ::= NOMBRE POS2 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS1",16, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // POS ::= POSICION POS1 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("POS",15, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // COLORS4 ::= POSICION NOMBRE 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS4",14, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // COLORS4 ::= NOMBRE POSICION 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS4",14, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // COLORS3 ::= ATRIBUTOS NOMBRE 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS3",13, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // COLORS3 ::= NOMBRE ATRIBUTOS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS3",13, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // COLORS2 ::= ATRIBUTOS POSICION 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS2",12, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // COLORS2 ::= POSICION ATRIBUTOS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS2",12, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // COLORS1 ::= ATRIBUTOS COLORS4 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS1",11, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // COLORS1 ::= POSICION COLORS3 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS1",11, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // COLORS1 ::= NOMBRE COLORS2 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS1",11, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // COLORS ::= COLORES COLORS1 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("COLORS",10, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // NAME4 ::= POSICION coma COLORES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME4",9, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // NAME4 ::= COLORES coma POSICION 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME4",9, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // NAME3 ::= ATRIBUTOS coma COLORES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME3",8, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // NAME3 ::= COLORES coma ATRIBUTOS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME3",8, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // NAME2 ::= ATRIBUTOS coma POSICION 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME2",7, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // NAME2 ::= POSICION coma ATRIBUTOS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME2",7, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // NAME1 ::= ATRIBUTOS coma NAME4 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME1",6, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NAME1 ::= POSICION coma NAME3 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME1",6, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // NAME1 ::= COLORES coma NAME2 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME1",6, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NAME ::= NOMBRE coma NAME1 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NAME",5, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // DATOS ::= ATRIBUTES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // DATOS ::= POS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // DATOS ::= COLORS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // DATOS ::= NAME 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // EXP ::= 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP",47, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // EXP ::= coma EXPRESION EXP 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP",47, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // EXPRESION ::= abreLlaves DATOS cierraLlaves 
            {
              Object RESULT =null;
		
planeta_neutral t=new planeta_neutral(naves_,0,nombre_,false,false,produccion_);
t.setColor(new Color(rojo_,verde_,azul_));
t.setX_(coordx_);
t.setY_(coordy_);
t.setDue√±o(due√±o_);
neutrales.add(t);

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXPRESION",46, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // EXP2 ::= 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP2",55, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // EXP2 ::= coma EXPRESION1 EXP2 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXP2",55, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // EXPRESION1 ::= abreLlaves DATOS cierraLlaves 
            {
              Object RESULT =null;
		
planeta_jugador t=new planeta_jugador(naves_,0,nombre_,false,false,produccion_);
t.setColor(new Color(rojo_,verde_,azul_));
t.setX_(coordx_);
t.setY_(coordy_);
t.setDue√±o(due√±o_);
planetas.add(t);


              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("EXPRESION1",54, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NEUTRALES ::= neutrales dosPuntos abreCor EXPRESION EXP cierraCor 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("NEUTRALES",3, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // PLANETAS ::= planetas dosPuntos abreCor EXPRESION1 EXP2 cierraCor 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLANETAS",2, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // GAME4 ::= NEUTRALES coma PLANETAS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME4",53, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // GAME4 ::= PLANETAS coma NEUTRALES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME4",53, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // GAME3 ::= PLAYERS coma PLANETAS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME3",52, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // GAME3 ::= PLANETAS coma PLAYERS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME3",52, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // GAME2 ::= PLAYERS coma NEUTRALES 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME2",51, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // GAME2 ::= NEUTRALES coma PLAYERS 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME2",51, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // GAME1 ::= PLAYERS coma GAME4 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1",1, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // GAME1 ::= NEUTRALES coma GAME3 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1",1, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // GAME1 ::= PLANETAS coma GAME2 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME1",1, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // PLAYERS2 ::= cierraCor 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS2",50, ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // PLAYERS2 ::= coma PLAYERS1 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS2",50, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // PLAYERS1 ::= nombre dosPuntos COMILLAS1 id COMILLAS2 PLAYERS2 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)).value;
		 jugadores.add((String)e);
              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS1",49, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-5)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // PLAYERS ::= jugador dosPuntos abreCor PLAYERS1 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("PLAYERS",48, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-3)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // GAME ::= abreLlaves GAME1 cierraLlaves 
            {
              Object RESULT =null;

              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("GAME",0, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-2)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          return CUP$parser_save$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= GAME EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)).value;
		RESULT = start_val;
              CUP$parser_save$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser_save$stack.elementAt(CUP$parser_save$top-1)), ((java_cup.runtime.Symbol)CUP$parser_save$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser_save$parser.done_parsing();
          return CUP$parser_save$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}


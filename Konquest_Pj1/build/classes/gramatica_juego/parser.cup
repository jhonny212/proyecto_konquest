package gramatica_juego;
import java_cup.runtime.Symbol;
import java.awt.Dimension;
import planetas_neutral.planeta_neutral;
import java.util.ArrayList;
import jugadores.jugador;
import planetas.planeta_jugador;
parser code {:
    public static String nombre_mapa;
    public static Dimension dimension;
    public static boolean azar_,mapaciego_,acumular_;
    public static int finalizacion_,planetasNeutrales_;
    public static planeta_neutral neutral_;
    public static Object[] pbj;
    public static ArrayList<planeta_neutral> array_neutrales;
    public static ArrayList<planeta_jugador> array_planetas;
    public static ArrayList<planeta_jugador> array_planetas_;
    public static ArrayList<jugador> array_jugadores;
    public static String tipo_player;
    public static String nombre_player;
    public static String neutralesNombre_;
    public static int neutralesNaves_,neutralesProduc_;
    public static double neutralesMuertes; 
   
  //  public static boolean validaciones1_,boolean validaciones2_;
    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }
    public void unrecovered_syntax_error(Symbol s) throwsjava.lang.Exception{
    System.out.println("La Cadena:" +s.value+" en la Linea:"+(s.right+1) +" ,Columna: "+s.left+"esta fuera de contexto." );
 }
:}


terminal 
abreParentesis, cierraParentesis, dosPuntos, map, abreComilla,cierraComilla,comilla,coma,tamaño,columns,rows,
azar,bool,planetasNeu,mapaCiego,acum,Neu,mostrarNaves,mostrarEstadisticas,produc,end,planets,name,ships,deaths,planetas_Neu,
players,earths,abreCor,cierraCor,type,human,hard,easy,decimal,id, space, enter, num,Comilla,name_mapa,ERROR;

non-terminal INICIO, MAPA,PLANETAS,PLANETAS_NEUTRALES,JUGADORES, OPTIONS, ENTERSPACE, 
OPTIONS1, OPTIONS2, OPTIONS3, OPTIONS4, OPTIONS5, OPTIONS6, OPTIONS7, OPTIONS8, OPTIONS9, OPTIONS10, OPTIONS11, OPTIONS12,
OPTIONS13, OPTIONS14, OPTIONS15, OPTIONS16,OPCIONES_MAPA, OPM1,OPM2,OPM3,OPM4,
OPM5,OPM6,OPM7,OPM8,NOMBRE_MAPA,DIMENSIONES_MAPA,AZAR_MAPA,PLANETA_NEUTRALES,MAPA_CIEGO,
ACUMULAR,NEUTRALES,FINALIZACION,
OPP1,OPP2,OPP3,OPP4,OPP5,OPP0,OPP01,
OPTIONS0,OPTIONS01,OPTIONS02,
OPPAUX1,OPPAUX2,OPPAUX3,OPPAUX4,OPPAUX5,OPPAUX6,OPPAUX7,OPPAUX8,OPPAUX9,OPPAUX10,
OPPN1,OPPN2,OPPN3,OPPN4,OPPN5,OPPN0,OPPN01,
OPP21,OPP31,OPP41,OPP51,
OPPNAUX1,OPPNAUX2,OPPNAUX3,OPPNAUX4,OPPNAUX5,OPPNAUX6,OPPNAUX7,OPPNAUX8,OPPNAUX9,OPPNAUX10,OPPNAUX11,OPPNAUX12,OPPNAUX13,
PLAYERS1,PLAYERS2,PLAYERS3,PLAYERS4,PLAYERS5,PLAYERS6,PLAYERS7,PLAYERS8,PLAYERS9,PLAYERSAUX1,PLAYERSAUX2,PLAYERSAUX3;

start with INICIO;
INICIO  ::= ENTERSPACE abreParentesis OPTIONS ;


ENTERSPACE ::= space ENTERSPACE
           |   enter ENTERSPACE
           |                   ;
/*
*declaracion de los componentes del juego
*/ 
MAPA                  ::= ENTERSPACE map ENTERSPACE dosPuntos ENTERSPACE abreParentesis OPM1;
PLANETAS              ::= ENTERSPACE planets ENTERSPACE dosPuntos ENTERSPACE abreCor ENTERSPACE abreParentesis OPP0  ;
PLANETAS_NEUTRALES    ::= ENTERSPACE planetas_Neu ENTERSPACE dosPuntos ENTERSPACE abreCor ENTERSPACE abreParentesis ENTERSPACE OPPN0  ;
JUGADORES             ::= ENTERSPACE players ENTERSPACE dosPuntos ENTERSPACE abreCor ENTERSPACE abreParentesis ENTERSPACE PLAYERS1 ;
/*
*opciones
*/ 
OPTIONS ::= MAPA ENTERSPACE coma OPTIONS1
        | PLANETAS ENTERSPACE coma OPTIONS2
        | PLANETAS_NEUTRALES ENTERSPACE coma OPTIONS3 ENTERSPACE cierraParentesis ENTERSPACE
        | JUGADORES ENTERSPACE coma OPTIONS4;
/*
*inicio de mapa
*/ 
OPTIONS1 ::= PLANETAS ENTERSPACE coma OPTIONS5
            |PLANETAS_NEUTRALES ENTERSPACE coma OPTIONS6 ENTERSPACE cierraParentesis ENTERSPACE
            |JUGADORES ENTERSPACE coma OPTIONS7;
/*
*inicio de mapa
*/ 
OPTIONS5 ::= PLANETAS_NEUTRALES ENTERSPACE coma JUGADORES ENTERSPACE cierraParentesis ENTERSPACE
             |JUGADORES ENTERSPACE OPTIONS0;

OPTIONS0::= coma PLANETAS_NEUTRALES ENTERSPACE cierraParentesis ENTERSPACE |  cierraParentesis ENTERSPACE;

OPTIONS6 ::= JUGADORES ENTERSPACE coma PLANETAS
             |PLANETAS ENTERSPACE coma JUGADORES;

OPTIONS7 ::= PLANETAS_NEUTRALES ENTERSPACE coma PLANETAS ENTERSPACE cierraParentesis ENTERSPACE
             |PLANETAS ENTERSPACE OPTIONS0;
/*
*planetas
*/ 
OPTIONS2 ::= MAPA ENTERSPACE coma OPTIONS8
            | PLANETAS_NEUTRALES ENTERSPACE coma OPTIONS9 ENTERSPACE cierraParentesis ENTERSPACE
            | JUGADORES ENTERSPACE coma OPTIONS10;
//------------------->
OPTIONS8 ::= PLANETAS_NEUTRALES ENTERSPACE coma JUGADORES ENTERSPACE cierraParentesis ENTERSPACE
             |JUGADORES ENTERSPACE OPTIONS0;
OPTIONS9 ::= JUGADORES ENTERSPACE coma MAPA
             |MAPA ENTERSPACE coma JUGADORES;
OPTIONS10 ::= PLANETAS_NEUTRALES ENTERSPACE coma MAPA ENTERSPACE cierraParentesis ENTERSPACE
             |MAPA ENTERSPACE OPTIONS0;
//------------------->
/*
*planetas neutrales
*/ 
OPTIONS3 ::= PLANETAS ENTERSPACE coma OPTIONS11
            |MAPA ENTERSPACE coma OPTIONS12
            |JUGADORES ENTERSPACE coma OPTIONS13;
//------------------->
OPTIONS11 ::= MAPA ENTERSPACE coma JUGADORES 
             |JUGADORES ENTERSPACE coma MAPA;
OPTIONS12 ::= JUGADORES ENTERSPACE coma PLANETAS
             |PLANETAS ENTERSPACE coma JUGADORES;
OPTIONS13 ::= PLANETAS ENTERSPACE coma MAPA
             |MAPA ENTERSPACE coma PLANETAS;
/*
*inicio jugadores
*/ 
OPTIONS4 ::= PLANETAS ENTERSPACE coma OPTIONS14
            | MAPA ENTERSPACE coma OPTIONS15 
            | PLANETAS_NEUTRALES ENTERSPACE coma OPTIONS16 ENTERSPACE cierraParentesis ENTERSPACE;
//------------------->
OPTIONS14 ::= MAPA ENTERSPACE OPTIONS0
             |PLANETAS_NEUTRALES ENTERSPACE coma MAPA ENTERSPACE cierraParentesis ENTERSPACE;

OPTIONS15 ::= PLANETAS_NEUTRALES ENTERSPACE coma PLANETAS ENTERSPACE cierraParentesis ENTERSPACE
             |PLANETAS ENTERSPACE OPTIONS0;

OPTIONS16 ::= PLANETAS ENTERSPACE coma MAPA
             |MAPA ENTERSPACE coma PLANETAS;
//------------------->

/*
* opciones del mapa
*/

//---------------------------->
/*
OPM1 ::= space OPM1
       | enter OPM1
       | cierraParentesis
       | OPM3 OPM1 
       | coma OPM2;

OPM2 ::= space OPM2
       | enter OPM2
       | OPM3 OPM1;
*/   

OPM1 ::= OPM2 OPM1 | cierraParentesis | OPM3 OPM1 | coma ENTERSPACE OPM3 OPM1;
OPM2 ::= space | enter;
     

OPM3 ::=NOMBRE_MAPA 
       |DIMENSIONES_MAPA  
       |AZAR_MAPA 
       |PLANETA_NEUTRALES  
       |MAPA_CIEGO  
       |ACUMULAR  
       |NEUTRALES  
       |FINALIZACION;


OPM4 ::= rows:x ENTERSPACE dosPuntos ENTERSPACE num:e1 coma ENTERSPACE columns ENTERSPACE dosPuntos ENTERSPACE num:e2 
        {:
int filas=Integer.parseInt((String) e1);
int columnas=Integer.parseInt((String) e2);
parser.dimension=new Dimension(filas,columnas);
:}
        |columns:x ENTERSPACE dosPuntos ENTERSPACE num:e2 coma ENTERSPACE rows ENTERSPACE dosPuntos ENTERSPACE num:e1
              {:
int filas=Integer.parseInt((String) e1);
int columnas=Integer.parseInt((String) e2);
parser.dimension=new Dimension(filas,columnas);
:}; 
       
OPM5 ::= mostrarNaves ENTERSPACE dosPuntos ENTERSPACE bool:e ENTERSPACE OPM6 {:parser.pbj[0]=Boolean.parseBoolean((String)e);:}
        |mostrarEstadisticas ENTERSPACE dosPuntos ENTERSPACE bool:e ENTERSPACE OPM7 {:parser.pbj[1]=Boolean.parseBoolean((String)e);:}
        |produc ENTERSPACE dosPuntos ENTERSPACE num:e OPM8 {:parser.pbj[2]=Integer.parseInt((String)e);:}; 

OPM6 ::= coma ENTERSPACE mostrarEstadisticas ENTERSPACE dosPuntos ENTERSPACE 
        bool:e ENTERSPACE coma ENTERSPACE produc ENTERSPACE dosPuntos ENTERSPACE num:e2 {:
        parser.pbj[1]=Boolean.parseBoolean((String)e);
        parser.pbj[2]=Integer.parseInt((String)e2);
 :}; 
         
OPM7 ::= coma ENTERSPACE mostrarNaves ENTERSPACE dosPuntos ENTERSPACE bool:e ENTERSPACE coma ENTERSPACE
         produc ENTERSPACE dosPuntos ENTERSPACE num:e2 {:
        parser.pbj[0]=Boolean.parseBoolean((String)e);
        parser.pbj[2]=Integer.parseInt((String)e2);
        
 :}; 

OPM8 ::= coma ENTERSPACE mostrarNaves ENTERSPACE dosPuntos ENTERSPACE bool:e ENTERSPACE coma ENTERSPACE
         mostrarEstadisticas ENTERSPACE dosPuntos ENTERSPACE bool:e2 {:
        parser.pbj[0]=Boolean.parseBoolean((String)e);
        parser.pbj[1]=Boolean.parseBoolean((String)e2);
       
 :};


NOMBRE_MAPA ::=name_mapa ENTERSPACE dosPuntos ENTERSPACE abreComilla ENTERSPACE id:e  
        ENTERSPACE cierraComilla  {:parser.nombre_mapa=(String)e;:} ; 

DIMENSIONES_MAPA::= tamaño ENTERSPACE dosPuntos ENTERSPACE abreParentesis ENTERSPACE OPM4 ENTERSPACE cierraParentesis;  
AZAR_MAPA ::= azar ENTERSPACE dosPuntos ENTERSPACE bool:e {:parser.azar_=Boolean.parseBoolean((String)e);:};
PLANETA_NEUTRALES ::= planetasNeu ENTERSPACE dosPuntos ENTERSPACE num:e {:parser.planetasNeutrales_=Integer.parseInt((String)e);:};
MAPA_CIEGO ::= mapaCiego ENTERSPACE dosPuntos ENTERSPACE bool:e {:parser.mapaciego_=Boolean.parseBoolean((String)e);:};
ACUMULAR ::= acum ENTERSPACE dosPuntos ENTERSPACE bool:e {:parser.acumular_=Boolean.parseBoolean((String)e);:};
NEUTRALES ::= Neu ENTERSPACE dosPuntos ENTERSPACE abreParentesis ENTERSPACE OPM5 ENTERSPACE cierraParentesis;
FINALIZACION ::= end ENTERSPACE dosPuntos ENTERSPACE num:e {:parser.finalizacion_=Integer.parseInt((String)e);:};

/*
*opciones de planetas
*/

OPP0 ::= OPP1 ENTERSPACE cierraParentesis ENTERSPACE OPP01 ;
OPP01::=  cierraCor | coma ENTERSPACE abreParentesis OPP0;


OPP2 ::= ENTERSPACE name ENTERSPACE dosPuntos ENTERSPACE abreComilla ENTERSPACE id:e ENTERSPACE cierraComilla {:
parser.neutralesNombre_=(String)e;
:};
OPP3 ::= ENTERSPACE ships ENTERSPACE dosPuntos ENTERSPACE num:e {: parser.neutralesNaves_=Integer.parseInt((String)e);:};
OPP4 ::= ENTERSPACE produc ENTERSPACE dosPuntos ENTERSPACE num:e {: parser.neutralesProduc_=Integer.parseInt((String)e);:};
OPP5 ::= ENTERSPACE deaths ENTERSPACE dosPuntos ENTERSPACE decimal:e {: parser.neutralesMuertes_=Double.parseDouble((String)e);:};

OPP1 ::= OPP2 ENTERSPACE coma OPPAUX1 {: parser.array_planetas_.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes_,parser.neutralesNombre_,false,false,parser.neutralesProduc_)); :}
        |OPP3 ENTERSPACE coma OPPAUX2 {: parser.array_planetas_.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes_,parser.neutralesNombre_,false,false,parser.neutralesProduc_)); :}
        |OPP4 ENTERSPACE coma OPPAUX3 {: parser.array_planetas_.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes_,parser.neutralesNombre_,false,false,parser.neutralesProduc_)); :}
        |OPP5 ENTERSPACE coma OPPAUX4 {: parser.array_planetas_.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes_,parser.neutralesNombre_,false,false,parser.neutralesProduc_)); :};

//------------------------->
OPPAUX1 ::= OPP3 ENTERSPACE coma OPPAUX5
           |OPP4 ENTERSPACE coma OPPAUX6
           |OPP5 ENTERSPACE coma OPPAUX7;
OPPAUX5 ::= OPP4 ENTERSPACE coma OPP5 | OPP5 ENTERSPACE coma OPP4;
OPPAUX6 ::= OPP3 ENTERSPACE coma OPP5 | OPP5 ENTERSPACE coma OPP3;
OPPAUX7 ::= OPP4 ENTERSPACE coma OPP3 | OPP3 ENTERSPACE coma OPP4;
//------------------------->

OPPAUX2 ::= OPP2 ENTERSPACE coma OPPAUX5
           |OPP4 ENTERSPACE coma OPPAUX8
           |OPP5 ENTERSPACE coma OPPAUX9;
OPPAUX8 ::= OPP2 ENTERSPACE coma OPP5 | OPP5 ENTERSPACE coma OPP2;
OPPAUX9 ::= OPP4 ENTERSPACE coma OPP2 | OPP2 ENTERSPACE coma OPP4;
//-------------------------->
OPPAUX3 ::= OPP2 ENTERSPACE coma OPPAUX6
           |OPP3 ENTERSPACE coma OPPAUX8
           |OPP5 ENTERSPACE coma OPPAUX10;
OPPAUX10 ::= OPP2 ENTERSPACE coma OPP3 | OPP3 ENTERSPACE coma OPP2;
//-------------------------->
OPPAUX4 ::= OPP2 ENTERSPACE coma OPPAUX7
           |OPP3 ENTERSPACE coma OPPAUX9
           |OPP4 ENTERSPACE coma OPPAUX10;



/*
*opciones de planetasNeutrales
*/

OPPN0::= OPPN1 OPPN01;
OPPN01::= ENTERSPACE  cierraCor | ENTERSPACE coma ENTERSPACE abreParentesis ENTERSPACE OPPN0;

OPP21 ::= name ENTERSPACE dosPuntos ENTERSPACE abreComilla ENTERSPACE id:e {:parser.neutralesNombre_=(String)e;:} ENTERSPACE cierraComilla;
OPP31 ::= ships ENTERSPACE dosPuntos ENTERSPACE num:e {:parser.neutralesNaves_=Integer.parseInt((String)e);:};
OPP41 ::= produc ENTERSPACE dosPuntos ENTERSPACE num:e {:parser.neutralesProduc_=Integer.parseInt((String)e);:};
OPP51 ::= deaths ENTERSPACE dosPuntos ENTERSPACE decimal:e {:parser.neutralesMuertes=Double.parseDouble((String)e);:};

OPPN1 ::=OPP21:e ENTERSPACE coma ENTERSPACE OPPNAUX1{:
parser.array_neutrales.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes,parser.neutralesNombre_,false,false,parser.neutralesProduc_)); 
parser.neutralesProduc_=0;

:}
        |OPP31:e ENTERSPACE coma ENTERSPACE OPPNAUX2{:
parser.array_neutrales.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes,parser.neutralesNombre_,false,false,parser.neutralesProduc_)); 
parser.neutralesProduc_=0;

:}
        |OPP41:e ENTERSPACE coma ENTERSPACE OPPNAUX3{: 
parser.array_neutrales.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes,parser.neutralesNombre_,false,false,parser.neutralesProduc_)); 
parser.neutralesProduc_=0;

:}
        |OPP51:e ENTERSPACE coma ENTERSPACE OPPNAUX4{:
parser.array_neutrales.add(new planeta_neutral(parser.neutralesNaves_,parser.neutralesMuertes,parser.neutralesNombre_,false,false,parser.neutralesProduc_));
parser.neutralesProduc_=0;

 :};

//------------------------->

OPPNAUX1 ::=OPP31 ENTERSPACE coma ENTERSPACE OPPNAUX5
           |OPPN2 
           |OPP51 ENTERSPACE coma ENTERSPACE OPPNAUX8;

OPPN2 ::= OPP41 ENTERSPACE coma ENTERSPACE OPPNAUX6 |  OPPNAUX7;

OPPNAUX6 ::= OPP31 ENTERSPACE coma ENTERSPACE OPP51 ENTERSPACE cierraParentesis | OPP51 ENTERSPACE coma ENTERSPACE OPP31 ENTERSPACE cierraParentesis;
OPPNAUX5 ::= OPP41 ENTERSPACE coma ENTERSPACE OPP51 ENTERSPACE cierraParentesis | OPP51 ENTERSPACE OPPN3;

OPPNAUX8 ::= OPP41 ENTERSPACE coma ENTERSPACE OPP31 ENTERSPACE cierraParentesis | OPP31 ENTERSPACE OPPN3;
OPPNAUX 7 ::= OPP31 ENTERSPACE coma ENTERSPACE OPP51 ENTERSPACE cierraParentesis |OPP51 ENTERSPACE coma ENTERSPACE OPP31 ENTERSPACE cierraParentesis;
OPPN3 ::= coma OPP4 ENTERSPACE cierraParentesis | cierraParentesis;
//------------------------->


OPPNAUX2 ::=OPP21 ENTERSPACE coma ENTERSPACE OPPNAUX5
           |OPPN4
           |OPP51 ENTERSPACE coma ENTERSPACE OPPNAUX9;

OPPN4 ::=    OPP41 ENTERSPACE coma ENTERSPACE OPPNAUX10 |  OPPNAUX11;
OPPNAUX9 ::= OPP41 ENTERSPACE coma ENTERSPACE OPP21 ENTERSPACE cierraParentesis | OPP21 ENTERSPACE OPPN3;
OPPNAUX10 ::= OPP21 ENTERSPACE coma ENTERSPACE OPP51 ENTERSPACE cierraParentesis |OPP51 ENTERSPACE coma OPP21 ENTERSPACE cierraParentesis;
OPPNAUX 11 ::= OPP21 ENTERSPACE coma ENTERSPACE OPP51 ENTERSPACE cierraParentesis |OPP51 ENTERSPACE coma OPP21 ENTERSPACE cierraParentesis;

//-------------------------->
OPPNAUX3 ::=OPP21 ENTERSPACE coma ENTERSPACE OPPNAUX6
           |OPP31 ENTERSPACE coma ENTERSPACE OPPNAUX10
           |OPP51 ENTERSPACE coma ENTERSPACE OPPNAUX12;

OPPNAUX12 ::= OPP21 ENTERSPACE coma ENTERSPACE OPP31 ENTERSPACE cierraParentesis |OPP31 ENTERSPACE coma ENTERSPACE OPP21 ENTERSPACE cierraParentesis;

//-------------------------->

OPPNAUX4 ::=OPP21 ENTERSPACE coma ENTERSPACE OPPNAUX8
           |OPP31 ENTERSPACE coma ENTERSPACE OPPNAUX9
           |OPPN5;

OPPN5 ::= OPP41 ENTERSPACE coma ENTERSPACE OPPNAUX12 | OPPNAUX13;
OPPNAUX 13 ::= OPP21 ENTERSPACE coma ENTERSPACE OPP31 ENTERSPACE cierraParentesis |OPP31 ENTERSPACE coma ENTERSPACE OPP21 ENTERSPACE cierraParentesis;

/*
*jugadores
*/

PLAYERS1::= PLAYERS2 ENTERSPACE cierraParentesis ENTERSPACE PLAYERS9 ;
PLAYERS9::= cierraCor | coma ENTERSPACE abreParentesis ENTERSPACE PLAYERS1;
PLAYERS2::= PLAYERS3 ENTERSPACE coma ENTERSPACE  PLAYERSAUX1 {:
switch(tipo_player){
case "HUMANO":
parser.array_jugadores.add(new humano(nombre_player,array_planetas));
break;
case "DIFICIL":
parser.array_jugadores.add(new dificil(nombre_player,array_planetas));
break;
case "FACIL":
parser.array_jugadores.add(new facil(nombre_player,array_planetas));
break;
}
parser.array_jugadores=new ArrayList();;:}
           | PLAYERS4 ENTERSPACE coma ENTERSPACE PLAYERSAUX2 {:
switch(tipo_player){
case "HUMANO":
parser.array_jugadores.add(new humano(nombre_player,array_planetas));
break;
case "DIFICIL":
parser.array_jugadores.add(new dificil(nombre_player,array_planetas));
break;
case "FACIL":
parser.array_jugadores.add(new facil(nombre_player,array_planetas));
break;
}
array_jugadores=new ArrayList();;:}
           | PLAYERS7 ENTERSPACE coma ENTERSPACE PLAYERSAUX3 {:
switch(tipo_player){
case "HUMANO":
parser.array_jugadores.add(new humano(nombre_player,array_planetas));
break;
case "DIFICIL":
parser.array_jugadores.add(new dificil(nombre_player,array_planetas));
break;
case "FACIL":
parser.array_jugadores.add(new facil(nombre_player,array_planetas));
break;
}
parser.array_jugadores=new ArrayList();;:};
PLAYERSAUX1::= PLAYERS4 ENTERSPACE coma ENTERSPACE PLAYERS7 | PLAYERS7 ENTERSPACE coma ENTERSPACE PLAYERS4; 
PLAYERSAUX2::= PLAYERS3 ENTERSPACE coma ENTERSPACE PLAYERS7 | PLAYERS7 ENTERSPACE coma ENTERSPACE PLAYERS3;
PLAYERSAUX3::= PLAYERS4 ENTERSPACE coma ENTERSPACE PLAYERS3 | PLAYERS3 ENTERSPACE coma ENTERSPACE PLAYERS4;  

PLAYERS3::= name ENTERSPACE dosPuntos ENTERSPACE abreComilla ENTERSPACE id:e ENTERSPACE cierraComilla
{:  parser.nombre_player=(String )e; :};

PLAYERS4::= earths ENTERSPACE dosPuntos ENTERSPACE abreCor ENTERSPACE PLAYERS5;

PLAYERS5::= abreComilla ENTERSPACE id:e ENTERSPACE cierraComilla ENTERSPACE PLAYERS6
{:parser.array_planetas.add(new planeta_jugador((String)e));:};

PLAYERS6::= cierraCor | coma ENTERSPACE PLAYERS5;

PLAYERS7::= type ENTERSPACE dosPuntos ENTERSPACE PLAYERS8;

PLAYERS8::= hard:e {: parser.tipo_player=(String )e ;:} | easy:e {: parser.tipo_player=(String )e ;:} | human:e {: parser.tipo_player=(String )e ;:}; 

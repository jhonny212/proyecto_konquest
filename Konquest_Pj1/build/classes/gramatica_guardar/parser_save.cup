package gramatica_guardar;
import java_cup.runtime.Symbol;



parser code {:
 
    public static ArrayList<planeta_neutral> neutrales;
    public static ArrayList<planeta_jugador> planetas;
    public static ArrayList<String> jugadores;

    public static String nombre_,dueño_;
    public static int naves_,produccion_,rojo_,verde_,azul_,coordx_,coordy_;
   public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }
    public void unrecovered_syntax_error(Symbol s) throwsjava.lang.Exception{
    System.out.println("La Cadena:" +s.value+" en la Linea:"+(s.right+1) +" ,Columna: "+s.left+"esta fuera de contexto." );
 }
:}

terminal neutrales,planetas,jugador,abreCor,cierraCor,abreLlaves,cierraLlaves,abreParen,cierraParen,
coma,color,rojo,azul,verde,dosPuntos,naves,produccion,dueño,pos,x,y,nombre,comilla,abreComilla,
cierraComilla,num,id,enter,space,ERROR,datos;

non-terminal GAME,GAME1, PLANETAS, NEUTRALES, DATOS, NAME, NAME1,NAME2,NAME3,NAME4,
COLORS,COLORS1,COLORS2,COLORS3,COLORS4, POS, POS1,POS2,POS3,POS4,ATRIBUTES, ATRIBUTES1,
ATRIBUTES2,ATRIBUTES3,ATRIBUTES4,NOMBRE, COLORES, COLORES1, COMILLAS1,COMILLAS2,RED,RED1,BLUE,BLUE1,GREEN,GREEN1,POSICION,
POS11, ATRIBUTOS,ATRI1,NAVES,NAVES1,PRODUCCION,PRODUCCION1,DUEÑO,DUEÑO1,EXPRESION, EXP,PLAYERS,PLAYERS1,PLAYERS2
,GAME2,GAME3,GAME4,EXPRESION1,EXP2;

start with GAME;
//para mapas

GAME::= abreLlaves GAME1  cierraLlaves    ;

PLAYERS::=jugador dosPuntos abreCor PLAYERS1;
PLAYERS1::= nombre dosPuntos COMILLAS1 id:e COMILLAS2 PLAYERS2 {: jugadores.add((String)e);:};
PLAYERS2::= coma PLAYERS1 | cierraCor ;

GAME1::=  PLANETAS coma  GAME2
        | NEUTRALES coma  GAME3
        | PLAYERS  coma GAME4;

GAME2::= NEUTRALES coma PLAYERS  | PLAYERS coma NEUTRALES;
GAME3::= PLANETAS coma PLAYERS   | PLAYERS coma  PLANETAS;
GAME4::= PLANETAS coma NEUTRALES | NEUTRALES coma  PLANETAS;


PLANETAS::= planetas  dosPuntos  abreCor EXPRESION1 EXP2 cierraCor ;
NEUTRALES::= neutrales dosPuntos  abreCor  EXPRESION EXP cierraCor ;

// datos que van en el archivo
EXPRESION1::= abreLlaves DATOS cierraLlaves 
{:
planeta_jugador t=new planeta_jugador(naves_,0,nombre_,false,false,produccion_);
t.setColor(new Color(rojo_,verde_,azul_));
t.setX_(coordx_);
t.setY_(coordy_);
t.setDueño(dueño_);
planetas.add(t);

:}
;
EXP2 ::= coma EXPRESION1 EXP2

 |

 ;

EXPRESION::= abreLlaves DATOS cierraLlaves 
{:
planeta_neutral t=new planeta_neutral(naves_,0,nombre_,false,false,produccion_);
t.setColor(new Color(rojo_,verde_,azul_));
t.setX_(coordx_);
t.setY_(coordy_);
t.setDueño(dueño_);
neutrales.add(t);
:}
;
EXP ::= coma EXPRESION EXP | ;

DATOS::= NAME | COLORS | POS | ATRIBUTES 

;

NAME::=  NOMBRE coma NAME1;
NAME1::= COLORES coma NAME2      |POSICION coma NAME3 | ATRIBUTOS coma NAME4;
NAME2::= POSICION coma ATRIBUTOS | ATRIBUTOS coma POSICION;
NAME3::= COLORES coma ATRIBUTOS  | ATRIBUTOS coma COLORES; 
NAME4::= COLORES coma POSICION   | POSICION coma COLORES;

COLORS ::= COLORES COLORS1;
COLORS1::= NOMBRE COLORS2      |POSICION COLORS3 | ATRIBUTOS COLORS4;
COLORS2::= POSICION ATRIBUTOS | ATRIBUTOS POSICION;
COLORS3::= NOMBRE ATRIBUTOS  | ATRIBUTOS NOMBRE; 
COLORS4::= NOMBRE POSICION   | POSICION NOMBRE;

POS ::= POSICION POS1;
POS1::= NOMBRE POS2       |COLORES POS3 | ATRIBUTOS POS4;
POS2::= COLORES ATRIBUTOS | ATRIBUTOS COLORES;
POS3::= NOMBRE ATRIBUTOS  | ATRIBUTOS NOMBRE; 
POS4::= NOMBRE COLORES    | POSICION NOMBRE;

ATRIBUTES ::= ATRIBUTOS ATRIBUTES1;
ATRIBUTES1::= NOMBRE  ATRIBUTES2 |COLORES ATRIBUTES3 | POSICION ATRIBUTES4;
ATRIBUTES2::= COLORES POSICION   | POSICION COLORES ;
ATRIBUTES3::= NOMBRE  POSICION   | POSICION NOMBRE; 
ATRIBUTES4::= NOMBRE  COLORES    | COLORES NOMBRE;







//atributos 
NOMBRE::= nombre dosPuntos COMILLAS1 id:e COMILLAS2 {: nombre_=(String)e;:} ;
//colores
COLORES::= color dosPuntos abreLlaves COLORES1 cierraLlaves;
COLORES1::= RED | BLUE | GREEN;
RED::= rojo dosPuntos num:e coma RED1 {: rojo_= Integer.parseInt((String)e); :};
RED1::= azul dosPuntos num:e coma verde dosPuntos num:e1 
{:
 azul_= Integer.parseInt((String)e); 
 verde_= Integer.parseInt((String)e1); 
:} 
| verde dosPuntos num:e2 coma azul dosPuntos num:e3
{:
 azul_= Integer.parseInt((String)e3); 
 verde_= Integer.parseInt((String)e2); 
:} 
;
BLUE::= azul dosPuntos num:e coma BLUE1
{:
 azul_= Integer.parseInt((String)e); 
:} ;
BLUE1::= rojo dosPuntos num:e coma verde dosPuntos num:e1
{:
 rojo_= Integer.parseInt((String)e); 
 verde_= Integer.parseInt((String)e1); 
:} 
 | verde dosPuntos num:e2 coma rojo dosPuntos num:e3
{:
 rojo_= Integer.parseInt((String)e3); 
 verde_= Integer.parseInt((String)e2); 
:} 
;
GREEN::= verde dosPuntos num:e coma GREEN1
{:
 verde_= Integer.parseInt((String)e); 
:} 
;
GREEN1::= rojo dosPuntos num:e coma azul dosPuntos num:e1 
{:
 rojo_= Integer.parseInt((String)e); 
 azul_= Integer.parseInt((String)e1); 
:} 
| azul dosPuntos num:e2 coma rojo dosPuntos num:e3
{:
 azul_= Integer.parseInt((String)e2); 
 rojo_= Integer.parseInt((String)e3); 
:} 
;
//----------------------------------------------->

//posicion
POSICION::= pos dosPuntos abreLlaves POS11 cierraLlaves;
POS11::=  x dosPuntos num:e coma y dosPuntos num:e1
{:
coordx_=Integer.parseInt((String)e);
coordy_=Integer.parseInt((String)e1);
:}
 | y dosPuntos num:e coma x dosPuntos num:e1
{:
coordx_=Integer.parseInt((String)e1);
coordy_=Integer.parseInt((String)e);
:}
;
//------------------->
 // atributos
ATRIBUTOS::= datos dosPuntos abreLlaves ATRI1 cierraLlaves;
ATRI1::= NAVES | PRODUCCION | DUEÑO ;
NAVES::= naves dosPuntos num:e coma NAVES1 {: naves_=Integer.parseInt((String)e);:};
NAVES1::= produccion dosPuntos num:e coma dueño dosPuntos COMILLAS1 id:e1 COMILLAS2 
{: 
produccion_=Integer.parseInt((String)e);
dueño_=(String)e1;
:}
| dueño dosPuntos COMILLAS1 id:e1 COMILLAS2  coma  produccion dosPuntos num:e
{:
produccion_=Integer.parseInt((String)e);
dueño_=(String)e1;
:}
;

PRODUCCION::= produccion dosPuntos num:e coma PRODUCCION1 {: produccion_=Integer.parseInt((String)e);:};
PRODUCCION1::= naves dosPuntos num:e1 coma dueño dosPuntos COMILLAS1 id:e2 COMILLAS2 
{:
naves_=Integer.parseInt((String)e1);
dueño_=(String)e2;
:}
| dueño dosPuntos COMILLAS1 id:e1 COMILLAS2  coma  naves dosPuntos num:e2
{:
naves_=Integer.parseInt((String)e);
dueño_=(String)e1;
:}
;

DUEÑO::=dueño dosPuntos COMILLAS1 id:e COMILLAS2 coma DUEÑO1 {: dueño_=(String)e;:};
DUEÑO1::= naves dosPuntos num:e coma produccion dosPuntos num:e1
{:
naves_=Integer.parseInt((String)e);
produccion_=Integer.parseInt((String)e1);
:}  
| produccion dosPuntos num:e1  coma  naves dosPuntos num:e
{:
naves_=Integer.parseInt((String)e);
produccion_=Integer.parseInt((String)e1);
:} 
;

//--------------->

//abre comillas
COMILLAS1::= comilla | abreComilla;
COMILLAS2::= comilla | cierraComilla;


